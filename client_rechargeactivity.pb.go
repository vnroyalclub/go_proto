// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_rechargeactivity.proto

package VK_Proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type WeekRechargeTask struct {
	TaskID           *int32              `protobuf:"varint,1,req,name=TaskID" json:"TaskID,omitempty"`
	Reward           []*PropExchangeData `protobuf:"bytes,2,rep,name=Reward" json:"Reward,omitempty"`
	Status           *CommonStatus       `protobuf:"varint,3,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	Des              *string             `protobuf:"bytes,4,opt,name=Des" json:"Des,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *WeekRechargeTask) Reset()                    { *m = WeekRechargeTask{} }
func (m *WeekRechargeTask) String() string            { return proto.CompactTextString(m) }
func (*WeekRechargeTask) ProtoMessage()               {}
func (*WeekRechargeTask) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *WeekRechargeTask) GetTaskID() int32 {
	if m != nil && m.TaskID != nil {
		return *m.TaskID
	}
	return 0
}

func (m *WeekRechargeTask) GetReward() []*PropExchangeData {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *WeekRechargeTask) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

func (m *WeekRechargeTask) GetDes() string {
	if m != nil && m.Des != nil {
		return *m.Des
	}
	return ""
}

type WeekRechargeInfo struct {
	IsOpen           *bool               `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	IsCanReset       *bool               `protobuf:"varint,2,req,name=IsCanReset" json:"IsCanReset,omitempty"`
	Status           *CommonStatus       `protobuf:"varint,3,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	Number           *int32              `protobuf:"varint,4,opt,name=Number" json:"Number,omitempty"`
	BuyDate          *string             `protobuf:"bytes,5,opt,name=BuyDate" json:"BuyDate,omitempty"`
	Tasks            []*WeekRechargeTask `protobuf:"bytes,6,rep,name=Tasks" json:"Tasks,omitempty"`
	Status2          *CommonStatus       `protobuf:"varint,7,req,name=Status2,enum=VK.Proto.CommonStatus" json:"Status2,omitempty"`
	IsDone           *bool               `protobuf:"varint,8,req,name=IsDone" json:"IsDone,omitempty"`
	CanBuyWareId     *string             `protobuf:"bytes,9,req,name=CanBuyWareId" json:"CanBuyWareId,omitempty"`
	CanBuyHalfWareId *string             `protobuf:"bytes,10,req,name=CanBuyHalfWareId" json:"CanBuyHalfWareId,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *WeekRechargeInfo) Reset()                    { *m = WeekRechargeInfo{} }
func (m *WeekRechargeInfo) String() string            { return proto.CompactTextString(m) }
func (*WeekRechargeInfo) ProtoMessage()               {}
func (*WeekRechargeInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{1} }

func (m *WeekRechargeInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *WeekRechargeInfo) GetIsCanReset() bool {
	if m != nil && m.IsCanReset != nil {
		return *m.IsCanReset
	}
	return false
}

func (m *WeekRechargeInfo) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

func (m *WeekRechargeInfo) GetNumber() int32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *WeekRechargeInfo) GetBuyDate() string {
	if m != nil && m.BuyDate != nil {
		return *m.BuyDate
	}
	return ""
}

func (m *WeekRechargeInfo) GetTasks() []*WeekRechargeTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *WeekRechargeInfo) GetStatus2() CommonStatus {
	if m != nil && m.Status2 != nil {
		return *m.Status2
	}
	return CommonStatus_CS_Invalid
}

func (m *WeekRechargeInfo) GetIsDone() bool {
	if m != nil && m.IsDone != nil {
		return *m.IsDone
	}
	return false
}

func (m *WeekRechargeInfo) GetCanBuyWareId() string {
	if m != nil && m.CanBuyWareId != nil {
		return *m.CanBuyWareId
	}
	return ""
}

func (m *WeekRechargeInfo) GetCanBuyHalfWareId() string {
	if m != nil && m.CanBuyHalfWareId != nil {
		return *m.CanBuyHalfWareId
	}
	return ""
}

// 领取活动奖励
type WeekRechargeTaskReq struct {
	TaskID           *int32 `protobuf:"varint,1,req,name=TaskID" json:"TaskID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WeekRechargeTaskReq) Reset()                    { *m = WeekRechargeTaskReq{} }
func (m *WeekRechargeTaskReq) String() string            { return proto.CompactTextString(m) }
func (*WeekRechargeTaskReq) ProtoMessage()               {}
func (*WeekRechargeTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{2} }

func (m *WeekRechargeTaskReq) GetTaskID() int32 {
	if m != nil && m.TaskID != nil {
		return *m.TaskID
	}
	return 0
}

// 活动奖励领取回复
type WeekRechargeTaskResp struct {
	Reward           []*PropExchangeData `protobuf:"bytes,1,rep,name=Reward" json:"Reward,omitempty"`
	Info             *WeekRechargeInfo   `protobuf:"bytes,2,req,name=Info" json:"Info,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *WeekRechargeTaskResp) Reset()                    { *m = WeekRechargeTaskResp{} }
func (m *WeekRechargeTaskResp) String() string            { return proto.CompactTextString(m) }
func (*WeekRechargeTaskResp) ProtoMessage()               {}
func (*WeekRechargeTaskResp) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{3} }

func (m *WeekRechargeTaskResp) GetReward() []*PropExchangeData {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *WeekRechargeTaskResp) GetInfo() *WeekRechargeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type RechargeExtraInfo struct {
	IsOpen           *bool              `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	Locker           *int32             `protobuf:"varint,2,req,name=Locker" json:"Locker,omitempty"`
	MinRecharge      *int32             `protobuf:"varint,3,req,name=MinRecharge" json:"MinRecharge,omitempty"`
	MaxExtra         *int32             `protobuf:"varint,4,opt,name=MaxExtra" json:"MaxExtra,omitempty"`
	Extra            *float64           `protobuf:"fixed64,5,opt,name=Extra" json:"Extra,omitempty"`
	ConfigId         *int32             `protobuf:"varint,6,req,name=ConfigId" json:"ConfigId,omitempty"`
	ExcludeGameIds   []int32            `protobuf:"varint,7,rep,name=ExcludeGameIds" json:"ExcludeGameIds,omitempty"`
	Status           *CommonStatus      `protobuf:"varint,8,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	Type             *RechargeExtraType `protobuf:"varint,9,opt,name=Type,enum=VK.Proto.RechargeExtraType" json:"Type,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RechargeExtraInfo) Reset()                    { *m = RechargeExtraInfo{} }
func (m *RechargeExtraInfo) String() string            { return proto.CompactTextString(m) }
func (*RechargeExtraInfo) ProtoMessage()               {}
func (*RechargeExtraInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{4} }

func (m *RechargeExtraInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *RechargeExtraInfo) GetLocker() int32 {
	if m != nil && m.Locker != nil {
		return *m.Locker
	}
	return 0
}

func (m *RechargeExtraInfo) GetMinRecharge() int32 {
	if m != nil && m.MinRecharge != nil {
		return *m.MinRecharge
	}
	return 0
}

func (m *RechargeExtraInfo) GetMaxExtra() int32 {
	if m != nil && m.MaxExtra != nil {
		return *m.MaxExtra
	}
	return 0
}

func (m *RechargeExtraInfo) GetExtra() float64 {
	if m != nil && m.Extra != nil {
		return *m.Extra
	}
	return 0
}

func (m *RechargeExtraInfo) GetConfigId() int32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

func (m *RechargeExtraInfo) GetExcludeGameIds() []int32 {
	if m != nil {
		return m.ExcludeGameIds
	}
	return nil
}

func (m *RechargeExtraInfo) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

func (m *RechargeExtraInfo) GetType() RechargeExtraType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RechargeExtraType_RET_VideoCatch
}

// 拉取充值额外奖励活动
type LoadRechargeExtraReq struct {
	Type             *RechargeExtraType `protobuf:"varint,1,req,name=Type,enum=VK.Proto.RechargeExtraType" json:"Type,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *LoadRechargeExtraReq) Reset()                    { *m = LoadRechargeExtraReq{} }
func (m *LoadRechargeExtraReq) String() string            { return proto.CompactTextString(m) }
func (*LoadRechargeExtraReq) ProtoMessage()               {}
func (*LoadRechargeExtraReq) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{5} }

func (m *LoadRechargeExtraReq) GetType() RechargeExtraType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RechargeExtraType_RET_VideoCatch
}

type MidMonthRechargeItme struct {
	Id               *int32        `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Recharge         *int32        `protobuf:"varint,2,req,name=Recharge" json:"Recharge,omitempty"`
	Extra            *int32        `protobuf:"varint,3,req,name=Extra" json:"Extra,omitempty"`
	Status           *CommonStatus `protobuf:"varint,4,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	WareId           *string       `protobuf:"bytes,5,req,name=WareId" json:"WareId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MidMonthRechargeItme) Reset()                    { *m = MidMonthRechargeItme{} }
func (m *MidMonthRechargeItme) String() string            { return proto.CompactTextString(m) }
func (*MidMonthRechargeItme) ProtoMessage()               {}
func (*MidMonthRechargeItme) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{6} }

func (m *MidMonthRechargeItme) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *MidMonthRechargeItme) GetRecharge() int32 {
	if m != nil && m.Recharge != nil {
		return *m.Recharge
	}
	return 0
}

func (m *MidMonthRechargeItme) GetExtra() int32 {
	if m != nil && m.Extra != nil {
		return *m.Extra
	}
	return 0
}

func (m *MidMonthRechargeItme) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

func (m *MidMonthRechargeItme) GetWareId() string {
	if m != nil && m.WareId != nil {
		return *m.WareId
	}
	return ""
}

type MidMonthRechargeInfo struct {
	IsOpen           *bool                   `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	Locker           *int32                  `protobuf:"varint,2,req,name=Locker" json:"Locker,omitempty"`
	StartDay         *int32                  `protobuf:"varint,3,req,name=StartDay" json:"StartDay,omitempty"`
	EndDay           *int32                  `protobuf:"varint,4,opt,name=EndDay" json:"EndDay,omitempty"`
	ConfigId         *int32                  `protobuf:"varint,5,req,name=ConfigId" json:"ConfigId,omitempty"`
	ExcludeGameIds   []int32                 `protobuf:"varint,6,rep,name=ExcludeGameIds" json:"ExcludeGameIds,omitempty"`
	Recharges        []*MidMonthRechargeItme `protobuf:"bytes,7,rep,name=Recharges" json:"Recharges,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *MidMonthRechargeInfo) Reset()                    { *m = MidMonthRechargeInfo{} }
func (m *MidMonthRechargeInfo) String() string            { return proto.CompactTextString(m) }
func (*MidMonthRechargeInfo) ProtoMessage()               {}
func (*MidMonthRechargeInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{7} }

func (m *MidMonthRechargeInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *MidMonthRechargeInfo) GetLocker() int32 {
	if m != nil && m.Locker != nil {
		return *m.Locker
	}
	return 0
}

func (m *MidMonthRechargeInfo) GetStartDay() int32 {
	if m != nil && m.StartDay != nil {
		return *m.StartDay
	}
	return 0
}

func (m *MidMonthRechargeInfo) GetEndDay() int32 {
	if m != nil && m.EndDay != nil {
		return *m.EndDay
	}
	return 0
}

func (m *MidMonthRechargeInfo) GetConfigId() int32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

func (m *MidMonthRechargeInfo) GetExcludeGameIds() []int32 {
	if m != nil {
		return m.ExcludeGameIds
	}
	return nil
}

func (m *MidMonthRechargeInfo) GetRecharges() []*MidMonthRechargeItme {
	if m != nil {
		return m.Recharges
	}
	return nil
}

type WeekendRechargeItme struct {
	Id               *int32        `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Recharge         *int32        `protobuf:"varint,2,req,name=Recharge" json:"Recharge,omitempty"`
	Extra            *int32        `protobuf:"varint,3,req,name=Extra" json:"Extra,omitempty"`
	Status           *CommonStatus `protobuf:"varint,4,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	WareId           *string       `protobuf:"bytes,5,req,name=WareId" json:"WareId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *WeekendRechargeItme) Reset()                    { *m = WeekendRechargeItme{} }
func (m *WeekendRechargeItme) String() string            { return proto.CompactTextString(m) }
func (*WeekendRechargeItme) ProtoMessage()               {}
func (*WeekendRechargeItme) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{8} }

func (m *WeekendRechargeItme) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *WeekendRechargeItme) GetRecharge() int32 {
	if m != nil && m.Recharge != nil {
		return *m.Recharge
	}
	return 0
}

func (m *WeekendRechargeItme) GetExtra() int32 {
	if m != nil && m.Extra != nil {
		return *m.Extra
	}
	return 0
}

func (m *WeekendRechargeItme) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

func (m *WeekendRechargeItme) GetWareId() string {
	if m != nil && m.WareId != nil {
		return *m.WareId
	}
	return ""
}

type WeekendRechargeInfo struct {
	IsOpen           *bool                  `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	Locker           *int32                 `protobuf:"varint,2,req,name=Locker" json:"Locker,omitempty"`
	StartDay         *int32                 `protobuf:"varint,3,req,name=StartDay" json:"StartDay,omitempty"`
	EndDay           *int32                 `protobuf:"varint,4,opt,name=EndDay" json:"EndDay,omitempty"`
	ConfigId         *int32                 `protobuf:"varint,5,req,name=ConfigId" json:"ConfigId,omitempty"`
	ExcludeGameIds   []int32                `protobuf:"varint,6,rep,name=ExcludeGameIds" json:"ExcludeGameIds,omitempty"`
	Recharges        []*WeekendRechargeItme `protobuf:"bytes,7,rep,name=Recharges" json:"Recharges,omitempty"`
	Status           *CommonStatus          `protobuf:"varint,8,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *WeekendRechargeInfo) Reset()                    { *m = WeekendRechargeInfo{} }
func (m *WeekendRechargeInfo) String() string            { return proto.CompactTextString(m) }
func (*WeekendRechargeInfo) ProtoMessage()               {}
func (*WeekendRechargeInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{9} }

func (m *WeekendRechargeInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *WeekendRechargeInfo) GetLocker() int32 {
	if m != nil && m.Locker != nil {
		return *m.Locker
	}
	return 0
}

func (m *WeekendRechargeInfo) GetStartDay() int32 {
	if m != nil && m.StartDay != nil {
		return *m.StartDay
	}
	return 0
}

func (m *WeekendRechargeInfo) GetEndDay() int32 {
	if m != nil && m.EndDay != nil {
		return *m.EndDay
	}
	return 0
}

func (m *WeekendRechargeInfo) GetConfigId() int32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

func (m *WeekendRechargeInfo) GetExcludeGameIds() []int32 {
	if m != nil {
		return m.ExcludeGameIds
	}
	return nil
}

func (m *WeekendRechargeInfo) GetRecharges() []*WeekendRechargeItme {
	if m != nil {
		return m.Recharges
	}
	return nil
}

func (m *WeekendRechargeInfo) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

type ManyRechargeItme struct {
	Id               *int32              `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Recharge         *int32              `protobuf:"varint,2,req,name=Recharge" json:"Recharge,omitempty"`
	Extra            *int32              `protobuf:"varint,3,req,name=Extra" json:"Extra,omitempty"`
	Status           *ManyRechargeStatus `protobuf:"varint,4,req,name=Status,enum=VK.Proto.ManyRechargeStatus" json:"Status,omitempty"`
	WareId           *string             `protobuf:"bytes,5,req,name=WareId" json:"WareId,omitempty"`
	Locker           *int32              `protobuf:"varint,6,req,name=Locker" json:"Locker,omitempty"`
	NeedCount        *int32              `protobuf:"varint,7,req,name=NeedCount" json:"NeedCount,omitempty"`
	RechargeCount    *int32              `protobuf:"varint,8,req,name=RechargeCount" json:"RechargeCount,omitempty"`
	MaxReward        *int32              `protobuf:"varint,9,req,name=MaxReward" json:"MaxReward,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ManyRechargeItme) Reset()                    { *m = ManyRechargeItme{} }
func (m *ManyRechargeItme) String() string            { return proto.CompactTextString(m) }
func (*ManyRechargeItme) ProtoMessage()               {}
func (*ManyRechargeItme) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{10} }

func (m *ManyRechargeItme) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ManyRechargeItme) GetRecharge() int32 {
	if m != nil && m.Recharge != nil {
		return *m.Recharge
	}
	return 0
}

func (m *ManyRechargeItme) GetExtra() int32 {
	if m != nil && m.Extra != nil {
		return *m.Extra
	}
	return 0
}

func (m *ManyRechargeItme) GetStatus() ManyRechargeStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ManyRechargeStatus_MRS_Invalid
}

func (m *ManyRechargeItme) GetWareId() string {
	if m != nil && m.WareId != nil {
		return *m.WareId
	}
	return ""
}

func (m *ManyRechargeItme) GetLocker() int32 {
	if m != nil && m.Locker != nil {
		return *m.Locker
	}
	return 0
}

func (m *ManyRechargeItme) GetNeedCount() int32 {
	if m != nil && m.NeedCount != nil {
		return *m.NeedCount
	}
	return 0
}

func (m *ManyRechargeItme) GetRechargeCount() int32 {
	if m != nil && m.RechargeCount != nil {
		return *m.RechargeCount
	}
	return 0
}

func (m *ManyRechargeItme) GetMaxReward() int32 {
	if m != nil && m.MaxReward != nil {
		return *m.MaxReward
	}
	return 0
}

type ManyRechargeInfo struct {
	IsOpen           *bool               `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	StartDay         *int32              `protobuf:"varint,2,req,name=StartDay" json:"StartDay,omitempty"`
	EndDay           *int32              `protobuf:"varint,3,opt,name=EndDay" json:"EndDay,omitempty"`
	ConfigId         *int32              `protobuf:"varint,4,req,name=ConfigId" json:"ConfigId,omitempty"`
	Recharges        []*ManyRechargeItme `protobuf:"bytes,5,rep,name=Recharges" json:"Recharges,omitempty"`
	Status           *ManyRechargeStatus `protobuf:"varint,6,req,name=Status,enum=VK.Proto.ManyRechargeStatus" json:"Status,omitempty"`
	ExcludeGameIds   []int32             `protobuf:"varint,7,rep,name=ExcludeGameIds" json:"ExcludeGameIds,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ManyRechargeInfo) Reset()                    { *m = ManyRechargeInfo{} }
func (m *ManyRechargeInfo) String() string            { return proto.CompactTextString(m) }
func (*ManyRechargeInfo) ProtoMessage()               {}
func (*ManyRechargeInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{11} }

func (m *ManyRechargeInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *ManyRechargeInfo) GetStartDay() int32 {
	if m != nil && m.StartDay != nil {
		return *m.StartDay
	}
	return 0
}

func (m *ManyRechargeInfo) GetEndDay() int32 {
	if m != nil && m.EndDay != nil {
		return *m.EndDay
	}
	return 0
}

func (m *ManyRechargeInfo) GetConfigId() int32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

func (m *ManyRechargeInfo) GetRecharges() []*ManyRechargeItme {
	if m != nil {
		return m.Recharges
	}
	return nil
}

func (m *ManyRechargeInfo) GetStatus() ManyRechargeStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ManyRechargeStatus_MRS_Invalid
}

func (m *ManyRechargeInfo) GetExcludeGameIds() []int32 {
	if m != nil {
		return m.ExcludeGameIds
	}
	return nil
}

type CrazyRechargeItem struct {
	Id               *int32               `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Recharge         *int32               `protobuf:"varint,2,req,name=Recharge" json:"Recharge,omitempty"`
	Extra            *int32               `protobuf:"varint,3,req,name=Extra" json:"Extra,omitempty"`
	Status           *CrazyRechargeStatus `protobuf:"varint,4,req,name=Status,enum=VK.Proto.CrazyRechargeStatus" json:"Status,omitempty"`
	WareId           *string              `protobuf:"bytes,5,req,name=WareId" json:"WareId,omitempty"`
	Locker           *int32               `protobuf:"varint,6,req,name=Locker" json:"Locker,omitempty"`
	NeedCount        *int32               `protobuf:"varint,7,req,name=NeedCount" json:"NeedCount,omitempty"`
	RechargeCount    *int32               `protobuf:"varint,8,req,name=RechargeCount" json:"RechargeCount,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CrazyRechargeItem) Reset()                    { *m = CrazyRechargeItem{} }
func (m *CrazyRechargeItem) String() string            { return proto.CompactTextString(m) }
func (*CrazyRechargeItem) ProtoMessage()               {}
func (*CrazyRechargeItem) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{12} }

func (m *CrazyRechargeItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CrazyRechargeItem) GetRecharge() int32 {
	if m != nil && m.Recharge != nil {
		return *m.Recharge
	}
	return 0
}

func (m *CrazyRechargeItem) GetExtra() int32 {
	if m != nil && m.Extra != nil {
		return *m.Extra
	}
	return 0
}

func (m *CrazyRechargeItem) GetStatus() CrazyRechargeStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CrazyRechargeStatus_CRS_Invalid
}

func (m *CrazyRechargeItem) GetWareId() string {
	if m != nil && m.WareId != nil {
		return *m.WareId
	}
	return ""
}

func (m *CrazyRechargeItem) GetLocker() int32 {
	if m != nil && m.Locker != nil {
		return *m.Locker
	}
	return 0
}

func (m *CrazyRechargeItem) GetNeedCount() int32 {
	if m != nil && m.NeedCount != nil {
		return *m.NeedCount
	}
	return 0
}

func (m *CrazyRechargeItem) GetRechargeCount() int32 {
	if m != nil && m.RechargeCount != nil {
		return *m.RechargeCount
	}
	return 0
}

type CrazyRechargeInfo struct {
	IsOpen           *bool                `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	StartDay         *int32               `protobuf:"varint,2,req,name=StartDay" json:"StartDay,omitempty"`
	EndDay           *int32               `protobuf:"varint,3,opt,name=EndDay" json:"EndDay,omitempty"`
	ConfigId         *int32               `protobuf:"varint,4,req,name=ConfigId" json:"ConfigId,omitempty"`
	Recharges        []*CrazyRechargeItem `protobuf:"bytes,5,rep,name=Recharges" json:"Recharges,omitempty"`
	Status           *CrazyRechargeStatus `protobuf:"varint,6,req,name=Status,enum=VK.Proto.CrazyRechargeStatus" json:"Status,omitempty"`
	ExcludeGameIds   []int32              `protobuf:"varint,7,rep,name=ExcludeGameIds" json:"ExcludeGameIds,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CrazyRechargeInfo) Reset()                    { *m = CrazyRechargeInfo{} }
func (m *CrazyRechargeInfo) String() string            { return proto.CompactTextString(m) }
func (*CrazyRechargeInfo) ProtoMessage()               {}
func (*CrazyRechargeInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{13} }

func (m *CrazyRechargeInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *CrazyRechargeInfo) GetStartDay() int32 {
	if m != nil && m.StartDay != nil {
		return *m.StartDay
	}
	return 0
}

func (m *CrazyRechargeInfo) GetEndDay() int32 {
	if m != nil && m.EndDay != nil {
		return *m.EndDay
	}
	return 0
}

func (m *CrazyRechargeInfo) GetConfigId() int32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

func (m *CrazyRechargeInfo) GetRecharges() []*CrazyRechargeItem {
	if m != nil {
		return m.Recharges
	}
	return nil
}

func (m *CrazyRechargeInfo) GetStatus() CrazyRechargeStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CrazyRechargeStatus_CRS_Invalid
}

func (m *CrazyRechargeInfo) GetExcludeGameIds() []int32 {
	if m != nil {
		return m.ExcludeGameIds
	}
	return nil
}

type LuckyRechargeItme struct {
	Id               *int32        `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Recharge         *int64        `protobuf:"varint,2,req,name=Recharge" json:"Recharge,omitempty"`
	Ratio            *int32        `protobuf:"varint,3,req,name=Ratio" json:"Ratio,omitempty"`
	Status           *CommonStatus `protobuf:"varint,4,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	WareId           *string       `protobuf:"bytes,5,req,name=WareId" json:"WareId,omitempty"`
	ConfigId         *int32        `protobuf:"varint,6,req,name=ConfigId" json:"ConfigId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LuckyRechargeItme) Reset()                    { *m = LuckyRechargeItme{} }
func (m *LuckyRechargeItme) String() string            { return proto.CompactTextString(m) }
func (*LuckyRechargeItme) ProtoMessage()               {}
func (*LuckyRechargeItme) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{14} }

func (m *LuckyRechargeItme) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *LuckyRechargeItme) GetRecharge() int64 {
	if m != nil && m.Recharge != nil {
		return *m.Recharge
	}
	return 0
}

func (m *LuckyRechargeItme) GetRatio() int32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

func (m *LuckyRechargeItme) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

func (m *LuckyRechargeItme) GetWareId() string {
	if m != nil && m.WareId != nil {
		return *m.WareId
	}
	return ""
}

func (m *LuckyRechargeItme) GetConfigId() int32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

type LuckyRechargeInfo struct {
	IsOpen           *bool                `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	Locker           *int32               `protobuf:"varint,2,req,name=Locker" json:"Locker,omitempty"`
	ExcludeGameIds   []int32              `protobuf:"varint,6,rep,name=ExcludeGameIds" json:"ExcludeGameIds,omitempty"`
	Recharges        []*LuckyRechargeItme `protobuf:"bytes,7,rep,name=Recharges" json:"Recharges,omitempty"`
	BuyTimes         *int32               `protobuf:"varint,8,req,name=BuyTimes" json:"BuyTimes,omitempty"`
	TotalTimes       *int32               `protobuf:"varint,9,req,name=TotalTimes" json:"TotalTimes,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *LuckyRechargeInfo) Reset()                    { *m = LuckyRechargeInfo{} }
func (m *LuckyRechargeInfo) String() string            { return proto.CompactTextString(m) }
func (*LuckyRechargeInfo) ProtoMessage()               {}
func (*LuckyRechargeInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{15} }

func (m *LuckyRechargeInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *LuckyRechargeInfo) GetLocker() int32 {
	if m != nil && m.Locker != nil {
		return *m.Locker
	}
	return 0
}

func (m *LuckyRechargeInfo) GetExcludeGameIds() []int32 {
	if m != nil {
		return m.ExcludeGameIds
	}
	return nil
}

func (m *LuckyRechargeInfo) GetRecharges() []*LuckyRechargeItme {
	if m != nil {
		return m.Recharges
	}
	return nil
}

func (m *LuckyRechargeInfo) GetBuyTimes() int32 {
	if m != nil && m.BuyTimes != nil {
		return *m.BuyTimes
	}
	return 0
}

func (m *LuckyRechargeInfo) GetTotalTimes() int32 {
	if m != nil && m.TotalTimes != nil {
		return *m.TotalTimes
	}
	return 0
}

func init() {
	proto.RegisterType((*WeekRechargeTask)(nil), "VK.Proto.WeekRechargeTask")
	proto.RegisterType((*WeekRechargeInfo)(nil), "VK.Proto.WeekRechargeInfo")
	proto.RegisterType((*WeekRechargeTaskReq)(nil), "VK.Proto.WeekRechargeTaskReq")
	proto.RegisterType((*WeekRechargeTaskResp)(nil), "VK.Proto.WeekRechargeTaskResp")
	proto.RegisterType((*RechargeExtraInfo)(nil), "VK.Proto.RechargeExtraInfo")
	proto.RegisterType((*LoadRechargeExtraReq)(nil), "VK.Proto.LoadRechargeExtraReq")
	proto.RegisterType((*MidMonthRechargeItme)(nil), "VK.Proto.MidMonthRechargeItme")
	proto.RegisterType((*MidMonthRechargeInfo)(nil), "VK.Proto.MidMonthRechargeInfo")
	proto.RegisterType((*WeekendRechargeItme)(nil), "VK.Proto.WeekendRechargeItme")
	proto.RegisterType((*WeekendRechargeInfo)(nil), "VK.Proto.WeekendRechargeInfo")
	proto.RegisterType((*ManyRechargeItme)(nil), "VK.Proto.ManyRechargeItme")
	proto.RegisterType((*ManyRechargeInfo)(nil), "VK.Proto.ManyRechargeInfo")
	proto.RegisterType((*CrazyRechargeItem)(nil), "VK.Proto.CrazyRechargeItem")
	proto.RegisterType((*CrazyRechargeInfo)(nil), "VK.Proto.CrazyRechargeInfo")
	proto.RegisterType((*LuckyRechargeItme)(nil), "VK.Proto.LuckyRechargeItme")
	proto.RegisterType((*LuckyRechargeInfo)(nil), "VK.Proto.LuckyRechargeInfo")
}

func init() { proto.RegisterFile("client_rechargeactivity.proto", fileDescriptor14) }

var fileDescriptor14 = []byte{
	// 915 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x97, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc7, 0x65, 0x27, 0x76, 0x93, 0x53, 0xa8, 0xda, 0xd9, 0xaa, 0xb2, 0xb2, 0x1f, 0x8a, 0x2c,
	0x84, 0x22, 0x24, 0xca, 0x2a, 0x62, 0x25, 0x56, 0x70, 0xd5, 0xa4, 0x5a, 0x2c, 0x9a, 0x05, 0xcd,
	0x56, 0xec, 0xe5, 0x6a, 0x88, 0xa7, 0x6d, 0xd4, 0x66, 0x1c, 0xec, 0x31, 0x24, 0x7b, 0xc5, 0x33,
	0x20, 0x71, 0x87, 0xc4, 0x5e, 0xf3, 0x06, 0x48, 0x3c, 0x0d, 0x4f, 0xc1, 0x05, 0x17, 0x68, 0x3e,
	0x6c, 0x8f, 0xed, 0xa6, 0x38, 0x55, 0x05, 0xec, 0x4d, 0x9b, 0x73, 0xe6, 0x78, 0xce, 0xc9, 0xff,
	0xff, 0xf3, 0x4c, 0x0b, 0x0f, 0xa7, 0x57, 0x33, 0xca, 0xf8, 0xab, 0x98, 0x4e, 0x2f, 0x48, 0x7c,
	0x4e, 0xc9, 0x94, 0xcf, 0xbe, 0x9b, 0xf1, 0xd5, 0xe1, 0x22, 0x8e, 0x78, 0x84, 0x3a, 0x5f, 0x7f,
	0x71, 0xf8, 0x95, 0xf8, 0xd4, 0xbb, 0x97, 0x5c, 0x90, 0x98, 0x86, 0xaf, 0xa6, 0xd1, 0x7c, 0x1e,
	0x31, 0xb5, 0xdc, 0x43, 0x3a, 0x49, 0x59, 0x3a, 0x4f, 0x54, 0xce, 0x7f, 0x63, 0xc1, 0xee, 0x4b,
	0x4a, 0x2f, 0xb1, 0xde, 0xf1, 0x94, 0x24, 0x97, 0xe8, 0x00, 0x5c, 0xf1, 0x3b, 0x18, 0x7b, 0x56,
	0xdf, 0x1e, 0x38, 0x58, 0x47, 0x68, 0x08, 0x2e, 0xa6, 0xdf, 0x93, 0x38, 0xf4, 0xec, 0x7e, 0x6b,
	0xb0, 0x3d, 0xec, 0x1d, 0x66, 0x0d, 0xc5, 0xcf, 0xc5, 0xf1, 0x72, 0x7a, 0x41, 0xd8, 0x39, 0x1d,
	0x13, 0x4e, 0xb0, 0xae, 0x44, 0x87, 0xe0, 0xbe, 0xe0, 0x84, 0xa7, 0x89, 0xd7, 0xea, 0xdb, 0x83,
	0x9d, 0xe1, 0x41, 0xf1, 0xcc, 0x48, 0x0e, 0xa7, 0x56, 0xb1, 0xae, 0x42, 0xbb, 0xd0, 0x1a, 0xd3,
	0xc4, 0x6b, 0xf7, 0xad, 0x41, 0x17, 0x8b, 0x8f, 0xfe, 0x9f, 0x76, 0x79, 0xc4, 0x80, 0x9d, 0x45,
	0x62, 0xc4, 0x20, 0xf9, 0x72, 0x41, 0x99, 0x1c, 0xb1, 0x83, 0x75, 0x84, 0x1e, 0x01, 0x04, 0xc9,
	0x88, 0x30, 0x4c, 0x13, 0xca, 0x3d, 0x5b, 0xae, 0x19, 0x99, 0x8d, 0xc7, 0x39, 0x00, 0xf7, 0x79,
	0x3a, 0xff, 0x86, 0xc6, 0x72, 0x22, 0x07, 0xeb, 0x08, 0x79, 0xb0, 0x75, 0x94, 0xae, 0xc6, 0x84,
	0x53, 0xcf, 0x91, 0xa3, 0x66, 0x21, 0x7a, 0x0c, 0x8e, 0x90, 0x2b, 0xf1, 0xdc, 0xaa, 0x46, 0x55,
	0x9d, 0xb1, 0x2a, 0x44, 0x8f, 0x61, 0x4b, 0x75, 0x1b, 0x7a, 0x5b, 0x37, 0x0e, 0x95, 0x95, 0xa9,
	0x6f, 0x3f, 0x8e, 0x18, 0xf5, 0x3a, 0xd9, 0xb7, 0x17, 0x11, 0xf2, 0xe1, 0x9d, 0x11, 0x61, 0x47,
	0xe9, 0xea, 0x25, 0x89, 0x69, 0x10, 0x7a, 0xdd, 0xbe, 0x3d, 0xe8, 0xe2, 0x52, 0x0e, 0x7d, 0x00,
	0xbb, 0x2a, 0xfe, 0x9c, 0x5c, 0x9d, 0xe9, 0x3a, 0x90, 0x75, 0xb5, 0xbc, 0xff, 0x21, 0xdc, 0xab,
	0x0d, 0x4d, 0xbf, 0x5d, 0xc7, 0x87, 0xff, 0x1a, 0xf6, 0xeb, 0xe5, 0xc9, 0xc2, 0xe0, 0xc6, 0xda,
	0x80, 0x9b, 0xb6, 0x30, 0x5a, 0x5a, 0xb8, 0x56, 0x45, 0x51, 0x81, 0x65, 0x9d, 0xff, 0xbb, 0x0d,
	0x7b, 0x59, 0xfa, 0x78, 0xc9, 0x63, 0x72, 0x23, 0x26, 0x07, 0xe0, 0x9e, 0x44, 0xd3, 0x4b, 0x1a,
	0xcb, 0xfd, 0x1d, 0xac, 0x23, 0xd4, 0x87, 0xed, 0xc9, 0x8c, 0x65, 0xfb, 0x48, 0x46, 0x1c, 0x6c,
	0xa6, 0x50, 0x0f, 0x3a, 0x13, 0xb2, 0x94, 0x1d, 0x34, 0x12, 0x79, 0x8c, 0xf6, 0xc1, 0x51, 0x0b,
	0x02, 0x09, 0x0b, 0xab, 0x40, 0x3c, 0x31, 0x8a, 0xd8, 0xd9, 0xec, 0x3c, 0x08, 0x3d, 0x57, 0x6e,
	0x98, 0xc7, 0xe8, 0x7d, 0xd8, 0x39, 0x5e, 0x4e, 0xaf, 0xd2, 0x90, 0x3e, 0x23, 0x73, 0x1a, 0x84,
	0x89, 0xb7, 0xd5, 0x6f, 0x0d, 0x1c, 0x5c, 0xc9, 0x1a, 0xd8, 0x76, 0x1a, 0x61, 0xfb, 0x11, 0xb4,
	0x4f, 0x57, 0x0b, 0xea, 0x75, 0xfb, 0xd6, 0x60, 0x67, 0x78, 0xbf, 0xa8, 0x2e, 0x49, 0x24, 0x4a,
	0xb0, 0x2c, 0xf4, 0x9f, 0xc1, 0xfe, 0x49, 0x44, 0xc2, 0xd2, 0xb2, 0xb0, 0x3a, 0xdb, 0xc8, 0x92,
	0x6d, 0x1b, 0x6c, 0xf4, 0xc6, 0x82, 0xfd, 0xc9, 0x2c, 0x9c, 0x44, 0x8c, 0x5f, 0xe4, 0x36, 0xf1,
	0x39, 0x45, 0x3b, 0x60, 0x07, 0xa1, 0x06, 0xc6, 0x0e, 0x42, 0x21, 0x4b, 0xae, 0xb3, 0x32, 0x21,
	0x8f, 0x0b, 0x21, 0x95, 0x01, 0x5a, 0xc8, 0x42, 0x84, 0x76, 0xd3, 0x77, 0x57, 0xf3, 0xed, 0x48,
	0xbe, 0x75, 0xe4, 0xff, 0x75, 0xdd, 0x88, 0xb7, 0xa1, 0xa5, 0x07, 0x9d, 0x17, 0x9c, 0xc4, 0x7c,
	0x4c, 0x56, 0x7a, 0xd2, 0x3c, 0x16, 0xcf, 0x1c, 0xb3, 0x50, 0xac, 0xe8, 0x83, 0x43, 0x45, 0x25,
	0x1a, 0x9c, 0x7f, 0xa4, 0xc1, 0xbd, 0x96, 0x86, 0xcf, 0xa0, 0x9b, 0xcd, 0xad, 0x80, 0xd9, 0x1e,
	0x3e, 0x2a, 0xb4, 0xb8, 0x4e, 0x7d, 0x5c, 0x3c, 0xe0, 0xff, 0x62, 0xa9, 0xb7, 0x9a, 0xb2, 0xf0,
	0x7f, 0x6a, 0xd0, 0xaf, 0x76, 0x7d, 0xc2, 0xb7, 0xc9, 0x9f, 0x4f, 0xeb, 0xfe, 0x3c, 0x2c, 0x1f,
	0x60, 0x15, 0xed, 0x0d, 0x7b, 0x36, 0x7d, 0xd5, 0xfd, 0x9f, 0x6d, 0xd8, 0x9d, 0x10, 0xb6, 0xba,
	0x63, 0x2f, 0x3f, 0xae, 0x78, 0xf9, 0xc0, 0x00, 0xcc, 0xe8, 0xd6, 0xcc, 0x51, 0xc3, 0x21, 0xb7,
	0xe4, 0xd0, 0x03, 0xe8, 0x3e, 0xa7, 0x34, 0x1c, 0x45, 0x29, 0xe3, 0xf2, 0xf2, 0x73, 0x70, 0x91,
	0x40, 0xef, 0xc1, 0xbb, 0x59, 0x1f, 0x55, 0xd1, 0x91, 0x15, 0xe5, 0xa4, 0xd8, 0x63, 0x42, 0x96,
	0xfa, 0x82, 0xe9, 0xaa, 0x3d, 0xf2, 0x84, 0xff, 0x63, 0x55, 0x9e, 0x9b, 0x40, 0x32, 0x81, 0xb1,
	0xd7, 0x02, 0xd3, 0x5a, 0x0b, 0x4c, 0xbb, 0x02, 0xcc, 0x27, 0x26, 0x08, 0x4e, 0xf5, 0xee, 0xab,
	0xba, 0x66, 0x52, 0x50, 0xc8, 0xef, 0x6e, 0x20, 0x7f, 0xc3, 0xeb, 0xc4, 0xff, 0xc1, 0x86, 0xbd,
	0x51, 0x4c, 0x5e, 0x1b, 0xed, 0xe9, 0xfc, 0x0e, 0xa0, 0x79, 0x52, 0x81, 0xc6, 0xa0, 0xbe, 0xd4,
	0xee, 0xbf, 0xa7, 0xc6, 0xff, 0xa9, 0x26, 0xc1, 0xbf, 0x09, 0xc6, 0xd3, 0x3a, 0x18, 0xf7, 0xd7,
	0x68, 0x25, 0xac, 0x31, 0xc9, 0x78, 0x52, 0x21, 0xa3, 0xa1, 0xc6, 0x4d, 0xd1, 0xf8, 0xcd, 0x82,
	0xbd, 0x93, 0x74, 0x7a, 0xb9, 0xd9, 0x79, 0xd2, 0x2a, 0xa3, 0x81, 0x09, 0x9f, 0x45, 0x19, 0x1a,
	0x32, 0xb8, 0xab, 0xbb, 0xe1, 0xa6, 0xbf, 0xa6, 0xfc, 0x3f, 0x6a, 0xb3, 0xdf, 0xe6, 0xd6, 0x68,
	0x7a, 0xca, 0x3f, 0xad, 0x9f, 0xf2, 0x86, 0x87, 0x35, 0x0d, 0x4d, 0x0f, 0x7b, 0xd0, 0x39, 0x4a,
	0x57, 0xa7, 0xb3, 0x39, 0x4d, 0x34, 0x9d, 0x79, 0x2c, 0xfe, 0x83, 0x39, 0x8d, 0x38, 0xb9, 0x52,
	0xab, 0xea, 0x3c, 0x33, 0x32, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xb6, 0xab, 0x18, 0x04,
	0x0e, 0x00, 0x00,
}
