// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shared_message.proto

package VK_Proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 空协议，用来占位
type Empty struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{0} }

// 消息协议
type Message struct {
	// 玩家ID
	PlayerId *int64 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	// 操作码
	Ops *int32 `protobuf:"varint,2,req,name=Ops" json:"Ops,omitempty"`
	// 数据
	Data             []byte `protobuf:"bytes,3,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{1} }

func (m *Message) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *Message) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Http响应结果篡改
type HttpResult struct {
	En               *int32 `protobuf:"varint,1,req,name=En" json:"En,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HttpResult) Reset()                    { *m = HttpResult{} }
func (m *HttpResult) String() string            { return proto.CompactTextString(m) }
func (*HttpResult) ProtoMessage()               {}
func (*HttpResult) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{2} }

func (m *HttpResult) GetEn() int32 {
	if m != nil && m.En != nil {
		return *m.En
	}
	return 0
}

func (m *HttpResult) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 消息协议
type RpcMessage struct {
	// guid
	Id *string `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	// chan
	RespChan *string `protobuf:"bytes,2,req,name=RespChan" json:"RespChan,omitempty"`
	// 操作码
	Ops *int32 `protobuf:"varint,3,req,name=Ops" json:"Ops,omitempty"`
	// 玩家ID
	PlayerId *int64 `protobuf:"varint,4,opt,name=PlayerId" json:"PlayerId,omitempty"`
	// 数据
	Data             []byte `protobuf:"bytes,5,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RpcMessage) Reset()                    { *m = RpcMessage{} }
func (m *RpcMessage) String() string            { return proto.CompactTextString(m) }
func (*RpcMessage) ProtoMessage()               {}
func (*RpcMessage) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{3} }

func (m *RpcMessage) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RpcMessage) GetRespChan() string {
	if m != nil && m.RespChan != nil {
		return *m.RespChan
	}
	return ""
}

func (m *RpcMessage) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *RpcMessage) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *RpcMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RpcResp struct {
	// guid
	Id *string `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	// en
	En *int32 `protobuf:"varint,2,req,name=En" json:"En,omitempty"`
	// 数据
	Data             []byte `protobuf:"bytes,3,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RpcResp) Reset()                    { *m = RpcResp{} }
func (m *RpcResp) String() string            { return proto.CompactTextString(m) }
func (*RpcResp) ProtoMessage()               {}
func (*RpcResp) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{4} }

func (m *RpcResp) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RpcResp) GetEn() int32 {
	if m != nil && m.En != nil {
		return *m.En
	}
	return 0
}

func (m *RpcResp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "VK.Proto.Empty")
	proto.RegisterType((*Message)(nil), "VK.Proto.Message")
	proto.RegisterType((*HttpResult)(nil), "VK.Proto.HttpResult")
	proto.RegisterType((*RpcMessage)(nil), "VK.Proto.RpcMessage")
	proto.RegisterType((*RpcResp)(nil), "VK.Proto.RpcResp")
}

func init() { proto.RegisterFile("shared_message.proto", fileDescriptor27) }

var fileDescriptor27 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xbd, 0x6a, 0xc3, 0x30,
	0x14, 0x85, 0xd1, 0x55, 0x8c, 0x93, 0x4b, 0x09, 0x45, 0x74, 0x10, 0x9d, 0x8c, 0x27, 0x4d, 0xa1,
	0x2f, 0xd0, 0xa9, 0x35, 0x34, 0x84, 0xd2, 0x70, 0x87, 0xae, 0x45, 0xc4, 0xa2, 0x19, 0xfc, 0x23,
	0x2c, 0x75, 0x70, 0x9f, 0xbe, 0x48, 0xc6, 0xae, 0x88, 0xb7, 0x73, 0x40, 0x47, 0xdf, 0x77, 0xf1,
	0xc1, 0x5d, 0xf5, 0x60, 0xea, 0xaf, 0xd6, 0x38, 0xa7, 0xbf, 0xcd, 0xc1, 0x0e, 0xbd, 0xef, 0xc5,
	0xf6, 0xf3, 0x74, 0x38, 0x87, 0x54, 0xe6, 0x98, 0x55, 0xad, 0xf5, 0x63, 0x79, 0xc2, 0xfc, 0x7d,
	0x7a, 0x23, 0x1e, 0x71, 0x7b, 0x6e, 0xf4, 0x68, 0x86, 0x63, 0x2d, 0x59, 0xc1, 0x14, 0xa7, 0xa5,
	0x8b, 0x7b, 0xe4, 0x1f, 0xd6, 0x49, 0x28, 0x40, 0x65, 0x14, 0xa2, 0x10, 0xb8, 0x79, 0xd5, 0x5e,
	0x4b, 0x5e, 0x30, 0x75, 0x47, 0x31, 0x97, 0x4f, 0x88, 0x6f, 0xde, 0x5b, 0x32, 0xee, 0xa7, 0xf1,
	0x62, 0x8f, 0x50, 0x75, 0x92, 0xc5, 0x09, 0x54, 0xdd, 0xb2, 0x80, 0x64, 0xf1, 0x8b, 0x48, 0xf6,
	0x32, 0x1b, 0xec, 0x11, 0x22, 0x1b, 0xd4, 0x8e, 0xe0, 0x58, 0x07, 0x23, 0x32, 0xce, 0xbe, 0x5c,
	0x75, 0x17, 0xd1, 0x3b, 0x5a, 0xfa, 0x6c, 0xc4, 0xff, 0x8d, 0x52, 0xff, 0xcd, 0x8d, 0xff, 0xcc,
	0xce, 0x12, 0xf6, 0x33, 0xe6, 0x64, 0x2f, 0xe1, 0xc3, 0x15, 0x78, 0x52, 0x87, 0x95, 0x7a, 0x72,
	0xec, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0x3f, 0xda, 0x8d, 0x63, 0x01, 0x00, 0x00,
}
