// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_subsidy.proto

package VK_Proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 游戏请求服务
type SubsidyOps int32

const (
	SubsidyOps_Req_Ticket_Rank    SubsidyOps = 1
	SubsidyOps_Req_Ticket_lottery SubsidyOps = 2
)

var SubsidyOps_name = map[int32]string{
	1: "Req_Ticket_Rank",
	2: "Req_Ticket_lottery",
}
var SubsidyOps_value = map[string]int32{
	"Req_Ticket_Rank":    1,
	"Req_Ticket_lottery": 2,
}

func (x SubsidyOps) Enum() *SubsidyOps {
	p := new(SubsidyOps)
	*p = x
	return p
}
func (x SubsidyOps) String() string {
	return proto.EnumName(SubsidyOps_name, int32(x))
}
func (x *SubsidyOps) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubsidyOps_value, data, "SubsidyOps")
	if err != nil {
		return err
	}
	*x = SubsidyOps(value)
	return nil
}
func (SubsidyOps) EnumDescriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

// 玩家的奖票排行榜
type AddTicketRankReq struct {
	PlayerID         *int64 `protobuf:"varint,1,req,name=PlayerID" json:"PlayerID,omitempty"`
	Num              *int64 `protobuf:"varint,2,req,name=Num" json:"Num,omitempty"`
	Source           *int32 `protobuf:"varint,3,req,name=Source" json:"Source,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AddTicketRankReq) Reset()                    { *m = AddTicketRankReq{} }
func (m *AddTicketRankReq) String() string            { return proto.CompactTextString(m) }
func (*AddTicketRankReq) ProtoMessage()               {}
func (*AddTicketRankReq) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *AddTicketRankReq) GetPlayerID() int64 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *AddTicketRankReq) GetNum() int64 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *AddTicketRankReq) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

// LotteryReq 玩家进行抽奖 请求
type LotteryReq struct {
	PlayerID         *int64 `protobuf:"varint,1,req,name=PlayerID" json:"PlayerID,omitempty"`
	Source           *int32 `protobuf:"varint,2,req,name=Source" json:"Source,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LotteryReq) Reset()                    { *m = LotteryReq{} }
func (m *LotteryReq) String() string            { return proto.CompactTextString(m) }
func (*LotteryReq) ProtoMessage()               {}
func (*LotteryReq) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{1} }

func (m *LotteryReq) GetPlayerID() int64 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *LotteryReq) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

// LotteryResp 玩家抽奖 返回
type LotteryResp struct {
	PlayerTicket     *int64 `protobuf:"varint,1,req,name=PlayerTicket" json:"PlayerTicket,omitempty"`
	TotalTicket      *int64 `protobuf:"varint,2,req,name=TotalTicket" json:"TotalTicket,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LotteryResp) Reset()                    { *m = LotteryResp{} }
func (m *LotteryResp) String() string            { return proto.CompactTextString(m) }
func (*LotteryResp) ProtoMessage()               {}
func (*LotteryResp) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{2} }

func (m *LotteryResp) GetPlayerTicket() int64 {
	if m != nil && m.PlayerTicket != nil {
		return *m.PlayerTicket
	}
	return 0
}

func (m *LotteryResp) GetTotalTicket() int64 {
	if m != nil && m.TotalTicket != nil {
		return *m.TotalTicket
	}
	return 0
}

func init() {
	proto.RegisterType((*AddTicketRankReq)(nil), "VK.Proto.AddTicketRankReq")
	proto.RegisterType((*LotteryReq)(nil), "VK.Proto.LotteryReq")
	proto.RegisterType((*LotteryResp)(nil), "VK.Proto.LotteryResp")
	proto.RegisterEnum("VK.Proto.SubsidyOps", SubsidyOps_name, SubsidyOps_value)
}

func init() { proto.RegisterFile("client_subsidy.proto", fileDescriptor14) }

var fileDescriptor14 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0x89, 0x2f, 0x2e, 0x4d, 0x2a, 0xce, 0x4c, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x08, 0xf3, 0xd6, 0x0b, 0x00, 0xb1, 0x94, 0x22, 0xb8, 0x04, 0x1c, 0x53, 0x52, 0x42,
	0x32, 0x93, 0xb3, 0x53, 0x4b, 0x82, 0x12, 0xf3, 0xb2, 0x83, 0x52, 0x0b, 0x85, 0xa4, 0xb8, 0x38,
	0x02, 0x72, 0x12, 0x2b, 0x53, 0x8b, 0x3c, 0x5d, 0x24, 0x18, 0x15, 0x98, 0x34, 0x98, 0x83, 0xe0,
	0x7c, 0x21, 0x01, 0x2e, 0x66, 0xbf, 0xd2, 0x5c, 0x09, 0x26, 0xb0, 0x30, 0x88, 0x29, 0x24, 0xc6,
	0xc5, 0x16, 0x9c, 0x5f, 0x5a, 0x94, 0x9c, 0x2a, 0xc1, 0xac, 0xc0, 0xa4, 0xc1, 0x1a, 0x04, 0xe5,
	0x29, 0x39, 0x70, 0x71, 0xf9, 0xe4, 0x97, 0x94, 0xa4, 0x16, 0x55, 0x12, 0x32, 0x13, 0x61, 0x02,
	0x13, 0x8a, 0x09, 0xc1, 0x5c, 0xdc, 0x70, 0x13, 0x8a, 0x0b, 0x84, 0x94, 0xb8, 0x78, 0x20, 0x5a,
	0x20, 0xae, 0x85, 0x1a, 0x83, 0x22, 0x26, 0xa4, 0xc0, 0xc5, 0x1d, 0x92, 0x5f, 0x92, 0x98, 0x03,
	0x55, 0x02, 0x71, 0x26, 0xb2, 0x90, 0x96, 0x25, 0x17, 0x57, 0x30, 0x24, 0x2c, 0xfc, 0x0b, 0x8a,
	0x85, 0x84, 0xb9, 0xf8, 0x83, 0x52, 0x0b, 0xe3, 0x21, 0x72, 0xf1, 0xa0, 0x00, 0x10, 0x60, 0x14,
	0x12, 0xe3, 0x12, 0x42, 0x12, 0xcc, 0x81, 0x38, 0x41, 0x80, 0x09, 0x10, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0x7d, 0xde, 0x0c, 0x4c, 0x01, 0x00, 0x00,
}
