// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_mini.proto

package VK_Proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 上分
type ExchageChmToMini struct {
	Amount           *int64 `protobuf:"varint,1,req,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ExchageChmToMini) Reset()                    { *m = ExchageChmToMini{} }
func (m *ExchageChmToMini) String() string            { return proto.CompactTextString(m) }
func (*ExchageChmToMini) ProtoMessage()               {}
func (*ExchageChmToMini) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ExchageChmToMini) GetAmount() int64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 下分
type ExchangeMiniToChm struct {
	Amount           *int64 `protobuf:"varint,1,req,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ExchangeMiniToChm) Reset()                    { *m = ExchangeMiniToChm{} }
func (m *ExchangeMiniToChm) String() string            { return proto.CompactTextString(m) }
func (*ExchangeMiniToChm) ProtoMessage()               {}
func (*ExchangeMiniToChm) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *ExchangeMiniToChm) GetAmount() int64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// mini游戏状态通知
type MiniNotify struct {
	GameID           *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	Json             *string `protobuf:"bytes,2,opt,name=Json" json:"Json,omitempty"`
	TimeStamp        *int64  `protobuf:"varint,3,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MiniNotify) Reset()                    { *m = MiniNotify{} }
func (m *MiniNotify) String() string            { return proto.CompactTextString(m) }
func (*MiniNotify) ProtoMessage()               {}
func (*MiniNotify) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *MiniNotify) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *MiniNotify) GetJson() string {
	if m != nil && m.Json != nil {
		return *m.Json
	}
	return ""
}

func (m *MiniNotify) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

// mini游戏状态通知
type LoadMiniStatusResp struct {
	Items            []*MiniNotify `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
	TimeStamp        *int64        `protobuf:"varint,2,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LoadMiniStatusResp) Reset()                    { *m = LoadMiniStatusResp{} }
func (m *LoadMiniStatusResp) String() string            { return proto.CompactTextString(m) }
func (*LoadMiniStatusResp) ProtoMessage()               {}
func (*LoadMiniStatusResp) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *LoadMiniStatusResp) GetItems() []*MiniNotify {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *LoadMiniStatusResp) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func init() {
	proto.RegisterType((*ExchageChmToMini)(nil), "VK.Proto.ExchageChmToMini")
	proto.RegisterType((*ExchangeMiniToChm)(nil), "VK.Proto.ExchangeMiniToChm")
	proto.RegisterType((*MiniNotify)(nil), "VK.Proto.MiniNotify")
	proto.RegisterType((*LoadMiniStatusResp)(nil), "VK.Proto.LoadMiniStatusResp")
}

func init() { proto.RegisterFile("client_mini.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xcf, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0x05, 0x70, 0x76, 0x63, 0xc5, 0x8e, 0x17, 0x1b, 0x44, 0x72, 0xf0, 0x10, 0xf6, 0x14, 0x2a,
	0xe4, 0xe0, 0x37, 0x90, 0x2a, 0x52, 0xff, 0x21, 0xe9, 0xd2, 0xa3, 0x12, 0x6a, 0xec, 0x06, 0x9c,
	0xcc, 0x62, 0xa6, 0xa0, 0xdf, 0x5e, 0xb2, 0x56, 0x8a, 0x82, 0xb7, 0xf7, 0xc2, 0x8f, 0x47, 0x06,
	0x26, 0xab, 0xb7, 0x18, 0x12, 0x3f, 0x63, 0x4c, 0xd1, 0xf6, 0xef, 0xc4, 0x24, 0x0f, 0x96, 0xb7,
	0xf6, 0xb1, 0xa4, 0x66, 0x0a, 0x47, 0x57, 0x1f, 0xab, 0xce, 0xaf, 0xc3, 0xac, 0xc3, 0x96, 0xee,
	0x63, 0x8a, 0xf2, 0x04, 0xf6, 0x2f, 0x90, 0x36, 0x89, 0x55, 0xa5, 0x6b, 0x23, 0xdc, 0xb6, 0x35,
	0x67, 0x30, 0x19, 0x6c, 0x5a, 0x87, 0xe2, 0x5a, 0x9a, 0x75, 0xf8, 0x2f, 0x5e, 0x02, 0x14, 0xf4,
	0x40, 0x1c, 0x5f, 0x3f, 0x8b, 0xba, 0xf6, 0x18, 0xe6, 0x97, 0x83, 0x1a, 0xb9, 0x6d, 0x93, 0x12,
	0xf6, 0x6e, 0x32, 0x25, 0x55, 0xeb, 0xca, 0x8c, 0xdd, 0x90, 0xe5, 0x29, 0x8c, 0xdb, 0x88, 0x61,
	0xc1, 0x1e, 0x7b, 0x25, 0x74, 0x65, 0x84, 0xdb, 0x3d, 0x34, 0x4f, 0x20, 0xef, 0xc8, 0xbf, 0x94,
	0xed, 0x05, 0x7b, 0xde, 0x64, 0x17, 0x72, 0x2f, 0xa7, 0x30, 0x9a, 0x73, 0xc0, 0xac, 0x2a, 0x2d,
	0xcc, 0xe1, 0xf9, 0xb1, 0xfd, 0x39, 0xd0, 0xee, 0x3e, 0xe1, 0xbe, 0xc9, 0xef, 0xfd, 0xfa, 0xcf,
	0xfe, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x48, 0xdd, 0xc9, 0x2e, 0x01, 0x00, 0x00,
}
