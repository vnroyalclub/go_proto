// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_activity.proto

/*
Package VK_Proto is a generated protocol buffer package.

It is generated from these files:
	client_activity.proto
	client_agent.proto
	client_client.proto
	client_firstrecharge.proto
	client_mini.proto
	client_moduleLock.proto
	client_msign.proto
	client_noviceactivity.proto
	client_otp.proto
	client_payment.proto
	client_periodic_sign.proto
	client_rebate.proto
	client_rechargeactivity.proto
	client_spay.proto
	client_subsidy.proto
	client_supply.proto
	client_treasure.proto
	client_vnsign.proto
	server_activity.proto
	server_log.proto
	server_server.proto
	server_service.proto
	shared_common.proto
	shared_en.proto
	shared_enums.proto
	shared_message.proto
	shared_ops.proto

It has these top-level messages:
	TGoodsInfo
	TLimitTimeGift
	CSLimitTimeGiftStatusReq
	SCLimitTimeGiftStatusRsp
	CSLimitTimeGiftReq
	SCLimitTimeGiftRsp
	CSLimitTimeGiftInfoReq
	SCLimitTimeGiftInfoRsp
	VIPLotteryPlayer
	VIPLotteryTask
	VIPLotteryInfo
	VIPLotteryReward
	CS_LoadUnReceiveEarnReq
	SC_LoadUnReceiveEarnRsp
	CS_ReceiveEarnReq
	SC_ReceiveEarnRsp
	CS_LoadHistoryEarnReq
	HistoryEarn
	SC_LoadHistoryEarnRsp
	AgentInfo
	CS_LoadSubAgentListReq
	SC_LoadSubAgentListRsp
	CS_SearchSubAgentReq
	SC_SearchSubAgentRsp
	CS_LoadMonthPromoteReq
	SC_LoadMonthPromoteRsp
	CS_LoadDayPromoteReq
	SC_LoadDayPromoteRsp
	CS_BindAgentReq
	CS_CheckMeIfAgentReq
	SC_CheckMeIfAgentRsp
	CS_ApplyRootAgentReq
	CS_BindWithPMCReq
	SC_LoadSummaryRsp
	CaijinRecord
	SubAgentContribDetail
	WithdrawalRecord
	CS_LoadCaijinRecordReq
	SC_LoadCaijinRecordRsp
	CS_LoadLastDayCaijinRecordReq
	SC_LoadLastDayCaijinRecordRsp
	CS_LoadWithdrawalRecordReq
	SC_LoadWithdrawalRecordRsp
	NewerRewardConfig
	SC_LoadNewerRewardConfig
	InviteRewardTask
	SC_LoadInviteInfoRsp
	CS_ReceiveInviteReq
	CS_CheckAndBindAgentReq
	SC_CheckAndBindAgentRsp
	ChildRewardInfo
	SC_LoadChildRewardInfo
	CS_ReceiveChildReward
	ParentRewardInfo
	SC_LoadParentRewardInfo
	CS_LoadParentRewardInfoReq
	CS_ReceiveParentReward
	Login
	TokenInfo
	FacebookLogin
	FacebookBind
	LineLogin
	LineBind
	TelBind
	EMailBind
	GetSmsToken
	LoginWithToken
	LoginResp
	Register
	RegToPublisher
	Chat
	CKeyValue
	SavePlayer
	BindVisitorAccount
	LoadPropsResp
	PropChanged
	PropAdded
	PropRemoved
	PropUse
	PropUseByID
	SignData
	LoadMails
	LoadMailsResp
	MailRemoved
	LoadMailsByRange
	DeleteMail
	DeleteAllMailsWithoutAttachments
	DeleteAllMailsWithoutAttachmentsResp
	TakeAttachments
	TakeAttachmentsAndDel
	TakeAllAttachments
	TakeAllAttachmentsResp
	TakeAllAttachmentsAndDel
	TakeAllAttachmentsAndDelResp
	OpenMail
	MailComming
	FriendOnline
	FriendOffline
	FriendAdded
	FriendDeleted
	FriendApplied
	LoadFriendsList
	LoadFriendsListResp
	LoadApplyFriendsList
	LoadApplyFriendsListResp
	AddFriend
	AddFriendResp
	DelFriend
	AgreeFriend
	RefuseFriend
	FriendApplyResp
	IsFriend
	IsFriendResp
	RecommandedGuy
	RecommandedList
	SearchPlayer
	SearchPlayerResp
	TitleProgress
	TitleData
	RoomUserOffline
	ServerDisconnected
	Pay
	PayResp
	OrderStatus
	GetOrderStatus
	GetOrderStatusResp
	GetOrder
	GetOrderResp
	IOSPurchaseVerify
	MolCashCardPurchase
	GooglePurchaseVerify
	GooglePurchaseVerify2
	Ware
	WaresConfig
	Notice
	LevelChanged
	LevelInfo
	LoadLevelConfigResp
	NotifyShowMessage
	LoadOnlinePlayers
	LoadOnlinePlayersResp
	LoadPlayerGameInfo
	PlayerGameInfo
	LoadPlayerOnlineInfo
	PlayerOnlineInfo
	LoadPlayerBaseInfo
	LoadPlayerBaseInfoResp
	LoadPlayerWithProps
	LoadPlayerWithPropType
	LoadPlayerWithPropsResp
	LoadOnlinePlayersCountResp
	LoadBufsResp
	NotifyNextOnlineRewardTime
	NotifyLotInfoResp
	LoadLotDataResp
	UseLotTicket
	UseLotTicketResp
	NotifyShopInfoResp
	LoadDailyTaskRefreshTimeResp
	NotifyDailyReward
	BuyWithId
	ShopInfoResp
	NotifyVipInfoResp
	LoadBufs
	GetVipRewardTime
	GetVipRewardTimeResp
	GetRank
	RankData
	GetRankResp
	JumpMsgData
	GetJumpMsgsResp
	GiveGift
	BeLike
	GetLikeCD
	GetLikeCDResp
	InviteNotification
	Invite
	SendMail
	PlayerList
	EnterTable
	GameChat
	UpdateGameProp
	LoadGameOnlinePlayers
	LoadGameOnlinePlayersResp
	Jackpot
	Jackpots
	AllocServer
	AllocServerResp
	AllocServerAddressResp
	PChat
	PChatSummary
	LoadPChatSummaryResp
	LoadPChatList
	LoadPChatListResp
	SendPChat
	DelPChat
	MarkPChatAsReaded
	TableList
	TableListResp
	Relief
	FristPay
	ActivityResult
	Announcement
	RunningHorseLantern
	PurchaseNotify
	BeInvited
	GetInvited
	GetInvitedResp
	VipChanged
	GetVipKeepProps
	GetVipKeepPropsResp
	LoadChatList
	LoadChatListResp
	SevenDays
	GtiDeposit
	Trade
	GetTradeRecords
	TradeRecords
	TradeSummary
	TradeSummaries
	VipPointChange
	CreditLine
	TradeInfo
	GetOnlineRewardInfo
	GetOnlineRewardInfoRsp
	TakeOnlineReward
	TakeOnlineRewardRsp
	GetResourceVersionInfo
	GetResourceVersionInfoRspItem
	GetResourceVersionInfoRsp
	GetLoginRewardInfo
	GetLoginRewardInfoRsp
	TakeLoginReward
	TakeLoginRewardRsp
	GetNewYearInfo
	GetNewYearInfoRsp
	CostSendFarewell
	CostSendFarewellRsp
	SendFarewell
	GetServerDateTime
	GetServerDateTimeRsp
	PromotionData
	PromotionStatusResp
	PromotionStatus
	TakeFestivalReward
	TakeFestivalRewardRsp
	OnlineRewardStatusNotify
	GetFestivalInfo
	GetFestivalInfoRsp
	GetFestivalLoginReward
	GetFestivalLoginRewardRsp
	GetFestivalRechargeReward
	GetFestivalRechargeRewardRsp
	SplashInfoResp
	SplashRank
	MySplashRank
	SplashRankResp
	Exchange
	NotifyPlayerIntoGameResp
	GetSevenDaysSignInfo
	GetSevenDaysSignInfoRsp
	SevenDaysReward
	TakeSevenDaysSignReward
	TakeSevenDaysSignRewardRsp
	PhysicalGoodsInfo
	PhysicalGoodsBuy
	PhysicalGoodsBuyInfo
	BuyPhysicalGoods
	SpinRewardInfo
	DailySpinTask
	DailySpinInfo
	NewbieTaskInfo
	DailySpinReq
	ChipReplenishInfo
	TradeRankChanged
	InvitePlayerIntoGameResp
	OnlineWelfareInfo
	OnlineWelfareReward
	OnlineWelfareBigReward
	OnlineWelfarePre
	SplashWaterReq
	SplashWaterRankReq
	WaterLampWishReq
	WaterLampWishRankReq
	WaterLampWishInfoResp
	WaterLampWishRank
	MyWaterLampWishRank
	WaterLampWishRankResp
	ElephantPiggyInfo
	ElephantPiggyInfoResp
	ElephantPiggyRecord
	ElephantPiggyRecordResp
	OPPOLogin
	OpenOtpValid
	CancelOtpValid
	SpayCard
	SpayCashCardPurchase
	GetFindPwdSmsTokenReq
	VerifyFindPwdSmsTokenReq
	TelBindAccountInfo
	TelBindAccountsResp
	ResetPasswordReq
	SpayCashCardExchange
	SpayCashCardExchangeRsp
	SpayCashCardCard
	SpayCashCardInfo
	SpayCashCardInfos
	AccountBind
	GetRegisterToken
	GetRegisterTokenResp
	SpayExchangeRecord
	GetSpayExchangeRecordResp
	SpayResultNotify
	PlayerNew
	LoadNews
	NKeyValue
	ModNew
	ModNewResp
	CreateNew
	CreateNewResp
	ClearNew
	SaveNewPlayerFlag
	GetNewPlayerFlag
	SevenFundInfo
	SevenFundInfoResp
	GetSevenFundReward
	SevenFundRewardResp
	TopWinItem
	GetTopWins
	GetTopWinsResp
	DailyTreasureReward
	GetDailyTreasureReward
	GetDailyTreasureRewardResp
	ExchangeV1
	ExchangeV1Rsp
	ExchangeV2
	ExchangeV2Rsp
	TryChipsExchangeChipsReq
	NewYearMesage
	PointCard
	GetPointInfo
	GetPointInfoResp
	MysteryElephantPiggy
	DailySpinJPRankData
	DailySpinJPRankResp
	KickPlayer
	LikeGameType
	FirebaseLogin
	FirebaseBind
	GetSpecailExchangeRateRsp
	GoogleLogin
	GoogleBind
	GetSubchannelRecharegeTimce
	GoogleRecharge
	GetGoogleRechargeNum
	NoviceGuideEvent
	RechargeFeedback
	CheckIfShowRechargeFeedback
	LoadActionTag
	LoadActivityIndependenceDay
	TakeDailySpinReward
	TakeDailySpinRewardRsp
	TriggerMailVerify
	BSSearch
	BSSearchRsp
	VNTrade
	VNTradeInfo
	LoadRechargeTip
	RemoveRechargeTip
	KickPlayerNtf
	FRPlayerInfo
	FRActivityInfo
	FirstRecharge
	FirstRechargeReward
	FRGiftPackage
	FirstRechargeNew
	ExchageChmToMini
	ExchangeMiniToChm
	MiniNotify
	LoadMiniStatusResp
	Lock
	MLock
	ModuleLock
	ReqModuleLock
	MsAskSignResp
	MsSignResp
	MsAskReplenishResp
	MsReplenishReq
	MsBoxContent
	MsBox
	MsAskBoxResp
	MsBarrage
	MsRollResp
	MsRankResp
	NoviceScratchCardInfo
	NoviceFirstTaskItem
	NoviceFirstTaskInfo
	NoviceSignInfo
	NoviceSignReq
	NoviceSignResp
	NoviceReStartInfo
	NoviceReStartDrawResp
	NoviceActivityInfo
	NoviceFirstTaskReq
	VoiceOTPReq
	VerifyOTPReq
	SendEMail
	VerifyEMail
	LoadEMail
	SendPhoneCodeReq
	VerifyPhoneCodeReq
	PhoneCodeNumRsp
	PhoneCodeNumReq
	VNOrder
	SignInfo
	SignV1Rsp
	Rebate
	FutureRebate
	RebateInfo
	ReqRebateRsp
	WeekRechargeTask
	WeekRechargeInfo
	WeekRechargeTaskReq
	WeekRechargeTaskResp
	RechargeExtraInfo
	LoadRechargeExtraReq
	MidMonthRechargeItme
	MidMonthRechargeInfo
	WeekendRechargeItme
	WeekendRechargeInfo
	ManyRechargeItme
	ManyRechargeInfo
	SpayBankAccount
	SpayOrder
	SpayBankAccountListReq
	SpayBankAccountListRsp
	SpayOrderReq
	SpayOrderCheckReq
	SpayOrderRsp
	BankExchangeReq
	SpayBankRecord
	SpayBankRecordRsp
	AddTicketRankReq
	LotteryReq
	LotteryResp
	SpAskResp
	SpOpenReq
	SpOpenResp
	SpConfirmReq
	SpRankInfo
	SpRanksResp
	TsPrize
	TsPrizeListResp
	TsPrizePuarchaseReq
	TsLuckyRecordReq
	TsLuckyRecord
	TsLuckyRecordResp
	TsPurchaseRecordReq
	TsPurchaseRecord
	TsPurchaseRecordResp
	TsPlayerLuckyRecordReq
	TsPlayerLuckyRecord
	TsPlayerLuckyRecordResp
	TsPlayerLuckyCodeReq
	TsPlayerLuckyCodeResp
	TsLuckyPlayer
	TsLatelyLuckyPlayer
	TsLatelyLuckyPlayerResp
	VnSign
	VnSignInfo
	ReqVnSign
	ReqVnSignRsp
	LogMsg
	LogMsgs
	LogLogin
	LogTransfer
	BankCard
	LogPlayerCard
	LogPurchase
	LogOnline
	LogOnlineTime
	LogTrade
	LogForbidden
	LogRegister
	LogMail
	LogOnlineReward
	LogLottery
	LogBYDLDJackpotWinners
	LogDummyMatchWinners
	LogLoginReward
	LogNewYearReward
	LogFestivalReward
	LogSplashWaterReward
	LogRewardPool
	LogFreezeAccount
	LogSupply
	LogSevenDaysSignReward
	LogUpdatePhysicalGoods
	LogDailySpinReward
	LogSilentAccount
	LogChipReplenish
	LogBlackAccount
	LogReceipt
	LogOnlineWelfare
	LogWaterLampWish
	LogElephantPiggy
	LogLimitTimeGift
	LogTreasure
	LogTreasureWinner
	LogSpayCashCard
	LogSpayBank
	LogBuYuScratchCard
	PersonalRecordInfo
	LogPersonalRecord
	LogNewAgentRelation
	LogSetAgentEffective
	LogUpdateNewAgentsTopUserId
	LogForbiddenNewAgent
	LogPaymentRecord
	LogCardExchange
	ThirdPartyGameTransferRecords
	ThirdPartyGameBet
	ThirdPartyGameBetList
	LogPlayerInfo
	LogNoviceGuide
	LogRechargeFeedback
	LogPhoneMailCode
	LogChmLocker
	Subject
	SubForPlayer
	UnsubForPlayer
	RemoveSubject
	Register2Gate
	Register2GateResp
	ReplacePlayerSession
	LoadPlayer
	PreparePlayerData
	GateLocation
	Check
	Route
	GlobalMail
	Mail
	Forbidden
	ModProps
	ModPropsResp
	BatchModPropsItem
	BatchModProps
	BatchModPropsResp
	UpdateTask
	RemoveTasks
	LoadGameTasks
	MolPurchaseNotify
	CloseAccount
	LoadKey
	LoadKeyLike
	KValue
	LoadKeyResp
	LoadKeyLikeResp
	UpdateKValues
	ConsumeChm
	CloseAccDetial
	CloseAccInfo
	PlayerBindInfo
	Marquee
	WebMailReq
	WebMailRsp
	WebModProps
	WebModPropsRsp
	NotifyGamePurchasedInfo
	LoadRobots
	Robots
	LoadRobotsResp
	GetMail
	GetMailResp
	WebKickoutPlayer
	GetPlayerProps
	GetPlayerPropsRsp
	Specify
	WebMailWithSpecifiesReq
	WebMailWithSpecifiesRsp
	WebModPropsWithMail
	WebModPropsWithSpecifies
	WebModPropsWithSpecifiesRsp
	AgentTrade
	AgentTradeTax
	AgentTradeTaxResp
	WebAutoTrade
	WebFacebookLogin
	WebFirebaseLogin
	WebLineLogin
	WebGoogleLogin
	GetAgentSmsToken
	NotifyGame
	BroadcastMsg
	SplashMsg
	DelMails
	GameChatMsg
	GameChatMsgResp
	ChengTuoUsedPercent
	ChengTuoUsedPercentResp
	ChengTuoUsedPercentChanged
	FreezeAccount
	FreezeAccDetial
	FreezeAccInfo
	GetFreezeAcc
	GetCloseAcc
	GamePropChanged
	UpdatePhysicalGoods
	SilentAccount
	SilentAccDetial
	SilentAccInfo
	GetSilentAcc
	BlackAccount
	BlackAccDetial
	BlackAccInfo
	GetBlackAcc
	WebAddRobot
	LockChip
	ConsumeProp
	AllRegData
	OPPOPurchaseNotify
	ElephantPiggyRewardReq
	LoadPlayerIpImei
	LoadPlayerIpImeiResp
	LoadAgentIpSinterImei
	LoadAgentIpSinterImeiResp
	SpayPurchaseNotify
	WebPlayerNew
	WebLoadNews
	LoadPlayers
	LoadPlayersResp
	GetLoseSubWinReq
	GetLoseSubWinData
	GetLoseSubWinRsp
	GetSuperTreasureTicketReq
	SetSuperTreasureTicketReq
	SuperTreasureTicketRsp
	NotifyGameDisbandTeam
	CheckTeamIfExistReq
	CheckTeamIfExistRsp
	ShippingReq
	VerifyCardReq
	CardExchangeInfo
	LoadCardExchangeInfos
	LoadCardExchangeInfoResp
	Withdrawal
	CountPlayerActivityReq
	CountPlayerActivityRsp
	AgentWhiteListReq
	AddAgentWhiteListRsp
	AgentWhiteListInfo
	LoadAgentWhiteListReq
	LoadAgentWhiteListRsp
	GetActivityOrder
	VerifyFirebaseToken
	ActivityRecharegeCompensate
	KeyValue
	UpdateKeyValues
	LoadValues
	LoadValuesResp
	RecordCapitalFlow
	RecordCapitalFlowRsp
	RegisterGame
	GameUpdate
	GameTableUpdate
	SetJackpot
	ModJackpot
	GetServerAddress
	GetServerAddressResp
	HSetUpdateValues
	HSetLoadValues
	HSetLoadValuesResp
	HSetDelValues
	HSetUpdateValue
	HSetLoadValue
	HSetLoadValueResp
	HSetDelValue
	HListAdd
	HListLoadRange
	HListLoadRangeResp
	HListLoadAll
	HListLoadAllResp
	HListDel
	ZSetRangeData
	ZSetGetRange
	ZSetGetRangeResp
	ZSetRefreshRank
	ZSetUpdateScore
	ZSetGetScore
	ZSetGetScoreResp
	SetAdd
	SetDel
	SetIsMember
	SetIsMemberResp
	SetMembers
	SetMembersResp
	SetRandom
	SetRandomResp
	HListDelAll
	ZSetDelAll
	SetDelAll
	ZSetDel
	HSetDelHash
	ZSetGetRank
	ZSetGetRankResp
	HSetAddValue
	SetExpire
	LoadExpire
	LoadExpireResp
	HListPop
	HListPopResp
	HSetIncr
	GameDataIncr
	GameDataLoad
	GameDataLoadResp
	GameUpdateOnlineCount
	PlayerData
	PropData
	PropExchangeData
	BatchPropExchangeData
	LotTicketData
	RewardData
	MailData
	PlayerBase
	TaskData
	PlayerWithProps
	BufData
	PlayerCounter
	TableInfo
	SevenDaysData
	TradeRecord
	PlayerSplash
	RewardPlayer
	SplashInfo
	NotifyPlayerIntoGame
	TestBuy
	PrintConf
	PrintConfResp
	PlayerOnline
	PlayerOffline
	PropItemChanged
	PhysicalGoodsChanged
	GameRecordData
	LoadGameRecord
	GameRecord
	GameRecordRsp
	SaveGameProp
	LoadGameProp
	LoadGamePropRsp
	SaveRoom
	DelRoom
	UpdateRoomStatus
	AddRoomPlayer
	DelRoomPlayer
	AddRoomLooker
	DelRoomLooker
	LoadRoom
	RoomPlayer
	RoomData
	LoadRoomRsp
	InvitePlayerIntoGame
	ActivityPlatform
	ActivityData
	ActivityDataResp
	FristRechargeStatus
	VnSignAcStatus
	RebateAcStatus
	ActivityStatus
	GameMessage
	TransferGameMessage
	TransferGameMessageResp
	GameArena
	GameArenaResp
	PlayerWish
	WaterLampWishItem
	WaterLampWishInfo
	DingTalkMsg
	ServerAddr
	LockMoneyDetail
	HallFunctionUpdate
	BaseMailData
	CloseServer
	OpenServer
	GetLockedChipInfo
	GetLockedChipInfoRsp
	RankBaseData
	CommonRewards
	AgentAttrNotify
	GetRankGameTotalWin
	PlayerRankData
	RankGameTotalWinResp
	TaskNotify
	IfFrozen
	IfFrozenResp
	GameTaxChanged
	GameTax
	GameTaxConfig
	GetGameTaxConfig
	GetGameTaxConfigResp
	GetPlayerAccByTel
	GetPlayerAccByTelResp
	PublishActivityMsg
	IfBackup
	IfBackupResp
	RestoreBackup
	RestoreBackupDetail
	RestoreBackupResp
	TimeNotify
	IfCanEnterGame
	IfCanEnterGameResp
	IfPassGameLimit
	IfPassGameLimitResp
	TriggerOnlineWelfareReward
	CheckIfImeiBindAgent
	CheckIfImeiBindAgentRsp
	ImeiBindAgentNotify
	ModPropFromGame
	GetTryChouMaQuotaPsp
	LabelInfo
	PlayerLabel
	PlayerLabels
	GamesStatusInfo
	GamesStatusInfos
	Empty
	Message
	HttpResult
	RpcMessage
	RpcResp
*/
package VK_Proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 物品信息
type TGoodsInfo struct {
	NGoodsID         *int32  `protobuf:"varint,1,req,name=nGoodsID" json:"nGoodsID,omitempty"`
	SzGoodsDesc      *string `protobuf:"bytes,2,req,name=szGoodsDesc" json:"szGoodsDesc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TGoodsInfo) Reset()                    { *m = TGoodsInfo{} }
func (m *TGoodsInfo) String() string            { return proto.CompactTextString(m) }
func (*TGoodsInfo) ProtoMessage()               {}
func (*TGoodsInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TGoodsInfo) GetNGoodsID() int32 {
	if m != nil && m.NGoodsID != nil {
		return *m.NGoodsID
	}
	return 0
}

func (m *TGoodsInfo) GetSzGoodsDesc() string {
	if m != nil && m.SzGoodsDesc != nil {
		return *m.SzGoodsDesc
	}
	return ""
}

// 限时礼包基本信息
type TLimitTimeGift struct {
	NGiftID          *int32 `protobuf:"varint,1,req,name=nGiftID" json:"nGiftID,omitempty"`
	LPrice           *int64 `protobuf:"varint,2,req,name=lPrice" json:"lPrice,omitempty"`
	LLeftTimeSec     *int64 `protobuf:"varint,3,req,name=lLeftTimeSec" json:"lLeftTimeSec,omitempty"`
	LMinReturnMoney  *int64 `protobuf:"varint,4,req,name=lMinReturnMoney" json:"lMinReturnMoney,omitempty"`
	LMaxReturnMoney  *int64 `protobuf:"varint,5,req,name=lMaxReturnMoney" json:"lMaxReturnMoney,omitempty"`
	NGiftType        *int32 `protobuf:"varint,6,req,name=nGiftType" json:"nGiftType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TLimitTimeGift) Reset()                    { *m = TLimitTimeGift{} }
func (m *TLimitTimeGift) String() string            { return proto.CompactTextString(m) }
func (*TLimitTimeGift) ProtoMessage()               {}
func (*TLimitTimeGift) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TLimitTimeGift) GetNGiftID() int32 {
	if m != nil && m.NGiftID != nil {
		return *m.NGiftID
	}
	return 0
}

func (m *TLimitTimeGift) GetLPrice() int64 {
	if m != nil && m.LPrice != nil {
		return *m.LPrice
	}
	return 0
}

func (m *TLimitTimeGift) GetLLeftTimeSec() int64 {
	if m != nil && m.LLeftTimeSec != nil {
		return *m.LLeftTimeSec
	}
	return 0
}

func (m *TLimitTimeGift) GetLMinReturnMoney() int64 {
	if m != nil && m.LMinReturnMoney != nil {
		return *m.LMinReturnMoney
	}
	return 0
}

func (m *TLimitTimeGift) GetLMaxReturnMoney() int64 {
	if m != nil && m.LMaxReturnMoney != nil {
		return *m.LMaxReturnMoney
	}
	return 0
}

func (m *TLimitTimeGift) GetNGiftType() int32 {
	if m != nil && m.NGiftType != nil {
		return *m.NGiftType
	}
	return 0
}

// 限时礼包是否展示
type CSLimitTimeGiftStatusReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSLimitTimeGiftStatusReq) Reset()                    { *m = CSLimitTimeGiftStatusReq{} }
func (m *CSLimitTimeGiftStatusReq) String() string            { return proto.CompactTextString(m) }
func (*CSLimitTimeGiftStatusReq) ProtoMessage()               {}
func (*CSLimitTimeGiftStatusReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 回复
type SCLimitTimeGiftStatusRsp struct {
	ArrLimitTimeGift []*TLimitTimeGift `protobuf:"bytes,1,rep,name=arrLimitTimeGift" json:"arrLimitTimeGift,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCLimitTimeGiftStatusRsp) Reset()                    { *m = SCLimitTimeGiftStatusRsp{} }
func (m *SCLimitTimeGiftStatusRsp) String() string            { return proto.CompactTextString(m) }
func (*SCLimitTimeGiftStatusRsp) ProtoMessage()               {}
func (*SCLimitTimeGiftStatusRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SCLimitTimeGiftStatusRsp) GetArrLimitTimeGift() []*TLimitTimeGift {
	if m != nil {
		return m.ArrLimitTimeGift
	}
	return nil
}

// 礼包掉落请求
type CSLimitTimeGiftReq struct {
	DwPlayerId       *int64 `protobuf:"varint,1,req,name=dwPlayerId" json:"dwPlayerId,omitempty"`
	NVipLevel        *int32 `protobuf:"varint,2,req,name=nVipLevel" json:"nVipLevel,omitempty"`
	LPlayerMoney     *int64 `protobuf:"varint,3,req,name=lPlayerMoney" json:"lPlayerMoney,omitempty"`
	LDelta           *int64 `protobuf:"varint,4,req,name=lDelta" json:"lDelta,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSLimitTimeGiftReq) Reset()                    { *m = CSLimitTimeGiftReq{} }
func (m *CSLimitTimeGiftReq) String() string            { return proto.CompactTextString(m) }
func (*CSLimitTimeGiftReq) ProtoMessage()               {}
func (*CSLimitTimeGiftReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CSLimitTimeGiftReq) GetDwPlayerId() int64 {
	if m != nil && m.DwPlayerId != nil {
		return *m.DwPlayerId
	}
	return 0
}

func (m *CSLimitTimeGiftReq) GetNVipLevel() int32 {
	if m != nil && m.NVipLevel != nil {
		return *m.NVipLevel
	}
	return 0
}

func (m *CSLimitTimeGiftReq) GetLPlayerMoney() int64 {
	if m != nil && m.LPlayerMoney != nil {
		return *m.LPlayerMoney
	}
	return 0
}

func (m *CSLimitTimeGiftReq) GetLDelta() int64 {
	if m != nil && m.LDelta != nil {
		return *m.LDelta
	}
	return 0
}

// 礼包掉落回复
type SCLimitTimeGiftRsp struct {
	ArrLimitTimeGift []*TLimitTimeGift `protobuf:"bytes,1,rep,name=arrLimitTimeGift" json:"arrLimitTimeGift,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCLimitTimeGiftRsp) Reset()                    { *m = SCLimitTimeGiftRsp{} }
func (m *SCLimitTimeGiftRsp) String() string            { return proto.CompactTextString(m) }
func (*SCLimitTimeGiftRsp) ProtoMessage()               {}
func (*SCLimitTimeGiftRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SCLimitTimeGiftRsp) GetArrLimitTimeGift() []*TLimitTimeGift {
	if m != nil {
		return m.ArrLimitTimeGift
	}
	return nil
}

// 请求礼包详细信息
type CSLimitTimeGiftInfoReq struct {
	NGiftID          *int32 `protobuf:"varint,1,req,name=nGiftID" json:"nGiftID,omitempty"`
	LPrice           *int64 `protobuf:"varint,2,req,name=lPrice" json:"lPrice,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSLimitTimeGiftInfoReq) Reset()                    { *m = CSLimitTimeGiftInfoReq{} }
func (m *CSLimitTimeGiftInfoReq) String() string            { return proto.CompactTextString(m) }
func (*CSLimitTimeGiftInfoReq) ProtoMessage()               {}
func (*CSLimitTimeGiftInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CSLimitTimeGiftInfoReq) GetNGiftID() int32 {
	if m != nil && m.NGiftID != nil {
		return *m.NGiftID
	}
	return 0
}

func (m *CSLimitTimeGiftInfoReq) GetLPrice() int64 {
	if m != nil && m.LPrice != nil {
		return *m.LPrice
	}
	return 0
}

// 礼包详细信息回复
type SCLimitTimeGiftInfoRsp struct {
	ArrGoodsInfo     []*TGoodsInfo `protobuf:"bytes,1,rep,name=arrGoodsInfo" json:"arrGoodsInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SCLimitTimeGiftInfoRsp) Reset()                    { *m = SCLimitTimeGiftInfoRsp{} }
func (m *SCLimitTimeGiftInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*SCLimitTimeGiftInfoRsp) ProtoMessage()               {}
func (*SCLimitTimeGiftInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SCLimitTimeGiftInfoRsp) GetArrGoodsInfo() []*TGoodsInfo {
	if m != nil {
		return m.ArrGoodsInfo
	}
	return nil
}

// VIP抽红包玩家
type VIPLotteryPlayer struct {
	Player           *PlayerData `protobuf:"bytes,1,req,name=Player" json:"Player,omitempty"`
	Level            *int32      `protobuf:"varint,100,req,name=Level" json:"Level,omitempty"`
	Score            *int64      `protobuf:"varint,102,req,name=Score" json:"Score,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *VIPLotteryPlayer) Reset()                    { *m = VIPLotteryPlayer{} }
func (m *VIPLotteryPlayer) String() string            { return proto.CompactTextString(m) }
func (*VIPLotteryPlayer) ProtoMessage()               {}
func (*VIPLotteryPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *VIPLotteryPlayer) GetPlayer() *PlayerData {
	if m != nil {
		return m.Player
	}
	return nil
}

func (m *VIPLotteryPlayer) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *VIPLotteryPlayer) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// VIP抽红包任务
type VIPLotteryTask struct {
	TaskID           *int32        `protobuf:"varint,1,req,name=TaskID" json:"TaskID,omitempty"`
	IsOpen           *bool         `protobuf:"varint,2,req,name=IsOpen" json:"IsOpen,omitempty"`
	Status           *CommonStatus `protobuf:"varint,3,req,name=Status,enum=VK.Proto.CommonStatus" json:"Status,omitempty"`
	Des              *string       `protobuf:"bytes,4,opt,name=Des" json:"Des,omitempty"`
	NeedValue        *int32        `protobuf:"varint,5,opt,name=NeedValue" json:"NeedValue,omitempty"`
	CurValue         *int32        `protobuf:"varint,6,opt,name=CurValue" json:"CurValue,omitempty"`
	Count            *int32        `protobuf:"varint,7,req,name=Count" json:"Count,omitempty"`
	Limit            *int32        `protobuf:"varint,8,req,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *VIPLotteryTask) Reset()                    { *m = VIPLotteryTask{} }
func (m *VIPLotteryTask) String() string            { return proto.CompactTextString(m) }
func (*VIPLotteryTask) ProtoMessage()               {}
func (*VIPLotteryTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *VIPLotteryTask) GetTaskID() int32 {
	if m != nil && m.TaskID != nil {
		return *m.TaskID
	}
	return 0
}

func (m *VIPLotteryTask) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *VIPLotteryTask) GetStatus() CommonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CommonStatus_CS_Invalid
}

func (m *VIPLotteryTask) GetDes() string {
	if m != nil && m.Des != nil {
		return *m.Des
	}
	return ""
}

func (m *VIPLotteryTask) GetNeedValue() int32 {
	if m != nil && m.NeedValue != nil {
		return *m.NeedValue
	}
	return 0
}

func (m *VIPLotteryTask) GetCurValue() int32 {
	if m != nil && m.CurValue != nil {
		return *m.CurValue
	}
	return 0
}

func (m *VIPLotteryTask) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *VIPLotteryTask) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

// VIP抽红包 活动信息
type VIPLotteryInfo struct {
	IsOpen           *bool               `protobuf:"varint,1,req,name=IsOpen" json:"IsOpen,omitempty"`
	IsShow           *bool               `protobuf:"varint,2,req,name=IsShow" json:"IsShow,omitempty"`
	PrizePool        *int64              `protobuf:"varint,3,req,name=PrizePool" json:"PrizePool,omitempty"`
	Tasks            []*VIPLotteryTask   `protobuf:"bytes,4,rep,name=Tasks" json:"Tasks,omitempty"`
	TaskOpen         *bool               `protobuf:"varint,5,req,name=TaskOpen" json:"TaskOpen,omitempty"`
	Number           *int32              `protobuf:"varint,6,req,name=Number" json:"Number,omitempty"`
	Players          []*VIPLotteryPlayer `protobuf:"bytes,7,rep,name=Players" json:"Players,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *VIPLotteryInfo) Reset()                    { *m = VIPLotteryInfo{} }
func (m *VIPLotteryInfo) String() string            { return proto.CompactTextString(m) }
func (*VIPLotteryInfo) ProtoMessage()               {}
func (*VIPLotteryInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *VIPLotteryInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *VIPLotteryInfo) GetIsShow() bool {
	if m != nil && m.IsShow != nil {
		return *m.IsShow
	}
	return false
}

func (m *VIPLotteryInfo) GetPrizePool() int64 {
	if m != nil && m.PrizePool != nil {
		return *m.PrizePool
	}
	return 0
}

func (m *VIPLotteryInfo) GetTasks() []*VIPLotteryTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *VIPLotteryInfo) GetTaskOpen() bool {
	if m != nil && m.TaskOpen != nil {
		return *m.TaskOpen
	}
	return false
}

func (m *VIPLotteryInfo) GetNumber() int32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *VIPLotteryInfo) GetPlayers() []*VIPLotteryPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

// VIP抽红包 请求抽红包
type VIPLotteryReward struct {
	Reward           *int64          `protobuf:"varint,1,req,name=Reward" json:"Reward,omitempty"`
	Info             *VIPLotteryInfo `protobuf:"bytes,2,req,name=Info" json:"Info,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *VIPLotteryReward) Reset()                    { *m = VIPLotteryReward{} }
func (m *VIPLotteryReward) String() string            { return proto.CompactTextString(m) }
func (*VIPLotteryReward) ProtoMessage()               {}
func (*VIPLotteryReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *VIPLotteryReward) GetReward() int64 {
	if m != nil && m.Reward != nil {
		return *m.Reward
	}
	return 0
}

func (m *VIPLotteryReward) GetInfo() *VIPLotteryInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*TGoodsInfo)(nil), "VK.Proto.TGoodsInfo")
	proto.RegisterType((*TLimitTimeGift)(nil), "VK.Proto.TLimitTimeGift")
	proto.RegisterType((*CSLimitTimeGiftStatusReq)(nil), "VK.Proto.CSLimitTimeGiftStatusReq")
	proto.RegisterType((*SCLimitTimeGiftStatusRsp)(nil), "VK.Proto.SCLimitTimeGiftStatusRsp")
	proto.RegisterType((*CSLimitTimeGiftReq)(nil), "VK.Proto.CSLimitTimeGiftReq")
	proto.RegisterType((*SCLimitTimeGiftRsp)(nil), "VK.Proto.SCLimitTimeGiftRsp")
	proto.RegisterType((*CSLimitTimeGiftInfoReq)(nil), "VK.Proto.CSLimitTimeGiftInfoReq")
	proto.RegisterType((*SCLimitTimeGiftInfoRsp)(nil), "VK.Proto.SCLimitTimeGiftInfoRsp")
	proto.RegisterType((*VIPLotteryPlayer)(nil), "VK.Proto.VIPLotteryPlayer")
	proto.RegisterType((*VIPLotteryTask)(nil), "VK.Proto.VIPLotteryTask")
	proto.RegisterType((*VIPLotteryInfo)(nil), "VK.Proto.VIPLotteryInfo")
	proto.RegisterType((*VIPLotteryReward)(nil), "VK.Proto.VIPLotteryReward")
}

func init() { proto.RegisterFile("client_activity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 671 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4d, 0x6f, 0x1a, 0x3b,
	0x14, 0xd5, 0x40, 0xf8, 0xc8, 0x4d, 0x94, 0x17, 0xf9, 0xe5, 0x21, 0x0b, 0x3d, 0x3d, 0xa1, 0x59,
	0xb1, 0x88, 0x58, 0x44, 0x6f, 0xd1, 0x3d, 0x48, 0x11, 0x29, 0x49, 0x91, 0x41, 0xa8, 0xea, 0x26,
	0x75, 0x67, 0x2e, 0xca, 0xa8, 0xc3, 0x98, 0x78, 0x3c, 0x49, 0xc9, 0x8f, 0xe8, 0xef, 0xeb, 0x4f,
	0xe8, 0x4f, 0xe8, 0xb2, 0xf2, 0xb5, 0x19, 0x18, 0x9a, 0x4d, 0xa5, 0xae, 0xe2, 0x73, 0xee, 0x8d,
	0xef, 0x3d, 0xc7, 0x87, 0x81, 0x7f, 0xa2, 0x34, 0xc1, 0xcc, 0xdc, 0xcb, 0xc8, 0x24, 0x4f, 0x89,
	0xd9, 0x0c, 0xd6, 0x5a, 0x19, 0xc5, 0xda, 0x8b, 0xb7, 0x83, 0xa9, 0x3d, 0x75, 0x59, 0xfe, 0x20,
	0x35, 0xc6, 0xf7, 0x98, 0x15, 0xab, 0xdc, 0x55, 0xbb, 0x7f, 0x7b, 0x2e, 0x52, 0xab, 0x95, 0xca,
	0x1c, 0x19, 0xde, 0x00, 0xcc, 0xaf, 0x95, 0x8a, 0xf3, 0x71, 0xb6, 0x54, 0xac, 0x0b, 0xed, 0xcc,
	0xa1, 0x11, 0x0f, 0x7a, 0xb5, 0x7e, 0x43, 0x94, 0x98, 0xf5, 0xe0, 0x24, 0x7f, 0x21, 0x30, 0xc2,
	0x3c, 0xe2, 0xb5, 0x5e, 0xad, 0x7f, 0x2c, 0xf6, 0xa9, 0xf0, 0x5b, 0x00, 0x67, 0xf3, 0x49, 0xb2,
	0x4a, 0xcc, 0x3c, 0x59, 0xe1, 0x75, 0xb2, 0x34, 0x8c, 0x43, 0x2b, 0xb3, 0x87, 0xf2, 0xbe, 0x2d,
	0x64, 0x1d, 0x68, 0xa6, 0x53, 0x9d, 0x44, 0x48, 0x37, 0xd5, 0x85, 0x47, 0x2c, 0x84, 0xd3, 0x74,
	0x82, 0x4b, 0xba, 0x62, 0x86, 0x11, 0xaf, 0x53, 0xb5, 0xc2, 0xb1, 0x3e, 0xfc, 0x95, 0xde, 0x26,
	0x99, 0x40, 0x53, 0xe8, 0xec, 0x56, 0x65, 0xb8, 0xe1, 0x47, 0xd4, 0x76, 0x48, 0xbb, 0x4e, 0xf9,
	0x65, 0xbf, 0xb3, 0xb1, 0xed, 0xac, 0xd0, 0xec, 0x5f, 0x38, 0xa6, 0xd5, 0xe6, 0x9b, 0x35, 0xf2,
	0x26, 0xed, 0xba, 0x23, 0xc2, 0x2e, 0xf0, 0xe1, 0xac, 0x22, 0x6d, 0x66, 0xa4, 0x29, 0x72, 0x81,
	0x8f, 0xe1, 0x47, 0xe0, 0xb3, 0xe1, 0x6b, 0xb5, 0x7c, 0xcd, 0x46, 0x70, 0x2e, 0xb5, 0xae, 0x14,
	0x79, 0xd0, 0xab, 0xf7, 0x4f, 0xae, 0xf8, 0x60, 0xfb, 0x58, 0x83, 0xaa, 0x67, 0xe2, 0x97, 0xff,
	0x08, 0xbf, 0x06, 0xc0, 0x0e, 0xc6, 0x0b, 0x7c, 0x64, 0xff, 0x01, 0xc4, 0xcf, 0xd3, 0x54, 0x6e,
	0x50, 0x8f, 0x63, 0xf2, 0xb7, 0x2e, 0xf6, 0x18, 0x92, 0xb4, 0x48, 0xd6, 0x13, 0x7c, 0xc2, 0x94,
	0x5c, 0xb6, 0x92, 0xb6, 0x04, 0x19, 0xed, 0x5a, 0x9d, 0x2f, 0x5b, 0xa3, 0xf7, 0x38, 0x7a, 0xa4,
	0x11, 0xa6, 0x46, 0x7a, 0x7f, 0x3d, 0x0a, 0x3f, 0x00, 0x3b, 0x90, 0xfc, 0xe7, 0xc4, 0xde, 0x40,
	0xe7, 0x40, 0xab, 0x8d, 0xa6, 0xd5, 0xfb, 0xdb, 0x61, 0x0a, 0x05, 0x74, 0x0e, 0xf6, 0xa4, 0xbb,
	0xf2, 0x35, 0x7b, 0x03, 0xa7, 0x52, 0xeb, 0x32, 0xf9, 0x7e, 0xcf, 0x8b, 0xbd, 0x3d, 0xcb, 0x9a,
	0xa8, 0x74, 0x86, 0x29, 0x9c, 0x2f, 0xc6, 0xd3, 0x89, 0x32, 0x06, 0xf5, 0xc6, 0x99, 0xc5, 0x2e,
	0xa1, 0xe9, 0x4e, 0xb4, 0x58, 0xe5, 0x1e, 0xc7, 0x8f, 0xa4, 0x91, 0xc2, 0xf7, 0xb0, 0x0b, 0x68,
	0xb8, 0x37, 0x89, 0x49, 0x85, 0x03, 0x96, 0x9d, 0x45, 0x4a, 0x23, 0x5f, 0x92, 0x04, 0x07, 0xc2,
	0xef, 0x01, 0x9c, 0xed, 0xc6, 0xcd, 0x65, 0xfe, 0xd9, 0x8a, 0xb5, 0x7f, 0x4b, 0x17, 0x3c, 0xb2,
	0xfc, 0x38, 0x7f, 0xb7, 0xc6, 0x8c, 0x4c, 0x68, 0x0b, 0x8f, 0xd8, 0x00, 0x9a, 0x2e, 0x90, 0xf4,
	0xc4, 0x67, 0x57, 0x9d, 0xdd, 0x72, 0x43, 0xfa, 0x14, 0xf8, 0xb8, 0xfa, 0x2e, 0x76, 0x0e, 0xf5,
	0x11, 0xe6, 0xfc, 0xa8, 0x17, 0xf4, 0x8f, 0x85, 0x3d, 0xda, 0x20, 0xdd, 0x21, 0xc6, 0x0b, 0x99,
	0x16, 0xc8, 0x1b, 0xbd, 0xc0, 0x06, 0xa9, 0x24, 0xec, 0x47, 0x63, 0x58, 0x68, 0x57, 0x6c, 0x52,
	0xb1, 0xc4, 0x56, 0xd4, 0x50, 0x15, 0x99, 0xe1, 0x2d, 0x27, 0x95, 0x00, 0x19, 0x60, 0x1f, 0x85,
	0xb7, 0xbd, 0x01, 0x16, 0x84, 0x3f, 0x2a, 0x52, 0xe9, 0x7b, 0xb4, 0x93, 0x14, 0x54, 0x24, 0x11,
	0x3f, 0x7b, 0x50, 0xcf, 0x3b, 0xa9, 0x16, 0xd9, 0x45, 0xa7, 0x3a, 0x79, 0xc1, 0xa9, 0x52, 0xa9,
	0x0f, 0xf4, 0x8e, 0x60, 0x03, 0x68, 0x58, 0xab, 0xac, 0xb4, 0x83, 0x50, 0x56, 0x1d, 0x16, 0xae,
	0xcd, 0x0a, 0xb3, 0x07, 0x9a, 0xdf, 0xa0, 0x39, 0x25, 0xb6, 0x1b, 0xdc, 0x15, 0xab, 0x4f, 0xa8,
	0xfd, 0xb7, 0xc2, 0x23, 0xf6, 0x3f, 0xb4, 0xdc, 0x2b, 0xe7, 0xbc, 0x45, 0x53, 0xba, 0xaf, 0x4d,
	0x71, 0x2d, 0x62, 0xdb, 0x1a, 0xbe, 0xdf, 0xcf, 0x94, 0xc0, 0x67, 0xa9, 0x63, 0x3b, 0xc1, 0x9d,
	0xfc, 0x2f, 0xdb, 0x23, 0x76, 0x09, 0x47, 0x94, 0xd8, 0x1a, 0x25, 0xed, 0x55, 0x11, 0x94, 0x5a,
	0xea, 0xfa, 0x19, 0x00, 0x00, 0xff, 0xff, 0x75, 0x1b, 0xdf, 0x9e, 0x2a, 0x06, 0x00, 0x00,
}
