// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_noviceactivity.proto

package VK_Proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 新手活动
// 初体验类型
type FirstTaskType int32

const (
	// 无效类型
	FirstTaskType_FirstTaskTypeInvalid FirstTaskType = 0
	// 充值
	FirstTaskType_FirstTaskTypeRecharge FirstTaskType = 1
	// 提款
	FirstTaskType_FirstTaskTypeWithdrawal FirstTaskType = 2
	// 点卡
	FirstTaskType_FirstTaskTypeCardExchange FirstTaskType = 3
)

var FirstTaskType_name = map[int32]string{
	0: "FirstTaskTypeInvalid",
	1: "FirstTaskTypeRecharge",
	2: "FirstTaskTypeWithdrawal",
	3: "FirstTaskTypeCardExchange",
}
var FirstTaskType_value = map[string]int32{
	"FirstTaskTypeInvalid":      0,
	"FirstTaskTypeRecharge":     1,
	"FirstTaskTypeWithdrawal":   2,
	"FirstTaskTypeCardExchange": 3,
}

func (x FirstTaskType) Enum() *FirstTaskType {
	p := new(FirstTaskType)
	*p = x
	return p
}
func (x FirstTaskType) String() string {
	return proto.EnumName(FirstTaskType_name, int32(x))
}
func (x *FirstTaskType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FirstTaskType_value, data, "FirstTaskType")
	if err != nil {
		return err
	}
	*x = FirstTaskType(value)
	return nil
}
func (FirstTaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

// 刮刮卡信息
type NoviceScratchCardInfo struct {
	IsBindCard        *bool  `protobuf:"varint,1,req,name=IsBindCard" json:"IsBindCard,omitempty"`
	IsCompleteInfo    *bool  `protobuf:"varint,2,req,name=IsCompleteInfo" json:"IsCompleteInfo,omitempty"`
	Amount            *int64 `protobuf:"varint,3,req,name=Amount" json:"Amount,omitempty"`
	MaxAmount         *int64 `protobuf:"varint,4,req,name=MaxAmount" json:"MaxAmount,omitempty"`
	IsReward          *bool  `protobuf:"varint,5,req,name=IsReward" json:"IsReward,omitempty"`
	ActivityCountDown *int64 `protobuf:"varint,6,req,name=ActivityCountDown" json:"ActivityCountDown,omitempty"`
	RewardCountDown   *int64 `protobuf:"varint,7,req,name=RewardCountDown" json:"RewardCountDown,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *NoviceScratchCardInfo) Reset()                    { *m = NoviceScratchCardInfo{} }
func (m *NoviceScratchCardInfo) String() string            { return proto.CompactTextString(m) }
func (*NoviceScratchCardInfo) ProtoMessage()               {}
func (*NoviceScratchCardInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *NoviceScratchCardInfo) GetIsBindCard() bool {
	if m != nil && m.IsBindCard != nil {
		return *m.IsBindCard
	}
	return false
}

func (m *NoviceScratchCardInfo) GetIsCompleteInfo() bool {
	if m != nil && m.IsCompleteInfo != nil {
		return *m.IsCompleteInfo
	}
	return false
}

func (m *NoviceScratchCardInfo) GetAmount() int64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *NoviceScratchCardInfo) GetMaxAmount() int64 {
	if m != nil && m.MaxAmount != nil {
		return *m.MaxAmount
	}
	return 0
}

func (m *NoviceScratchCardInfo) GetIsReward() bool {
	if m != nil && m.IsReward != nil {
		return *m.IsReward
	}
	return false
}

func (m *NoviceScratchCardInfo) GetActivityCountDown() int64 {
	if m != nil && m.ActivityCountDown != nil {
		return *m.ActivityCountDown
	}
	return 0
}

func (m *NoviceScratchCardInfo) GetRewardCountDown() int64 {
	if m != nil && m.RewardCountDown != nil {
		return *m.RewardCountDown
	}
	return 0
}

type NoviceFirstTaskItem struct {
	NeedCondition    *int64 `protobuf:"varint,1,req,name=NeedCondition" json:"NeedCondition,omitempty"`
	MaxAmount        *int64 `protobuf:"varint,2,req,name=MaxAmount" json:"MaxAmount,omitempty"`
	IsReward         *bool  `protobuf:"varint,3,req,name=IsReward" json:"IsReward,omitempty"`
	Count            *int64 `protobuf:"varint,4,req,name=Count" json:"Count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NoviceFirstTaskItem) Reset()                    { *m = NoviceFirstTaskItem{} }
func (m *NoviceFirstTaskItem) String() string            { return proto.CompactTextString(m) }
func (*NoviceFirstTaskItem) ProtoMessage()               {}
func (*NoviceFirstTaskItem) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *NoviceFirstTaskItem) GetNeedCondition() int64 {
	if m != nil && m.NeedCondition != nil {
		return *m.NeedCondition
	}
	return 0
}

func (m *NoviceFirstTaskItem) GetMaxAmount() int64 {
	if m != nil && m.MaxAmount != nil {
		return *m.MaxAmount
	}
	return 0
}

func (m *NoviceFirstTaskItem) GetIsReward() bool {
	if m != nil && m.IsReward != nil {
		return *m.IsReward
	}
	return false
}

func (m *NoviceFirstTaskItem) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 初体验信息
type NoviceFirstTaskInfo struct {
	RechargeItem      *NoviceFirstTaskItem `protobuf:"bytes,1,req,name=RechargeItem" json:"RechargeItem,omitempty"`
	WithdrawalItem    *NoviceFirstTaskItem `protobuf:"bytes,2,req,name=WithdrawalItem" json:"WithdrawalItem,omitempty"`
	CardExchangeItem  *NoviceFirstTaskItem `protobuf:"bytes,3,req,name=CardExchangeItem" json:"CardExchangeItem,omitempty"`
	ActivityCountDown *int64               `protobuf:"varint,4,req,name=ActivityCountDown" json:"ActivityCountDown,omitempty"`
	RewardCountDown   *int64               `protobuf:"varint,5,req,name=RewardCountDown" json:"RewardCountDown,omitempty"`
	XXX_unrecognized  []byte               `json:"-"`
}

func (m *NoviceFirstTaskInfo) Reset()                    { *m = NoviceFirstTaskInfo{} }
func (m *NoviceFirstTaskInfo) String() string            { return proto.CompactTextString(m) }
func (*NoviceFirstTaskInfo) ProtoMessage()               {}
func (*NoviceFirstTaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *NoviceFirstTaskInfo) GetRechargeItem() *NoviceFirstTaskItem {
	if m != nil {
		return m.RechargeItem
	}
	return nil
}

func (m *NoviceFirstTaskInfo) GetWithdrawalItem() *NoviceFirstTaskItem {
	if m != nil {
		return m.WithdrawalItem
	}
	return nil
}

func (m *NoviceFirstTaskInfo) GetCardExchangeItem() *NoviceFirstTaskItem {
	if m != nil {
		return m.CardExchangeItem
	}
	return nil
}

func (m *NoviceFirstTaskInfo) GetActivityCountDown() int64 {
	if m != nil && m.ActivityCountDown != nil {
		return *m.ActivityCountDown
	}
	return 0
}

func (m *NoviceFirstTaskInfo) GetRewardCountDown() int64 {
	if m != nil && m.RewardCountDown != nil {
		return *m.RewardCountDown
	}
	return 0
}

// 签到
type NoviceSignInfo struct {
	OrdinaryLose       *int64  `protobuf:"varint,1,req,name=OrdinaryLose" json:"OrdinaryLose,omitempty"`
	SpecialRecharge    *int64  `protobuf:"varint,2,req,name=SpecialRecharge" json:"SpecialRecharge,omitempty"`
	SpecialLose        *int64  `protobuf:"varint,3,req,name=SpecialLose" json:"SpecialLose,omitempty"`
	JumpGame1          *int32  `protobuf:"varint,4,req,name=JumpGame1" json:"JumpGame1,omitempty"`
	JumpGame2          *int32  `protobuf:"varint,5,req,name=JumpGame2" json:"JumpGame2,omitempty"`
	OrdinarySignStatus []int32 `protobuf:"varint,6,rep,name=OrdinarySignStatus" json:"OrdinarySignStatus,omitempty"`
	SpecialSignStatus  []int32 `protobuf:"varint,7,rep,name=SpecialSignStatus" json:"SpecialSignStatus,omitempty"`
	OrdinaryMaxReward  *int64  `protobuf:"varint,8,req,name=OrdinaryMaxReward" json:"OrdinaryMaxReward,omitempty"`
	SpecialMaxReward   *int64  `protobuf:"varint,9,req,name=SpecialMaxReward" json:"SpecialMaxReward,omitempty"`
	OrdinarySignReward []int64 `protobuf:"varint,10,rep,name=OrdinarySignReward" json:"OrdinarySignReward,omitempty"`
	SpecialSignReward  []int64 `protobuf:"varint,11,rep,name=SpecialSignReward" json:"SpecialSignReward,omitempty"`
	ActivityCountDown  *int64  `protobuf:"varint,12,req,name=ActivityCountDown" json:"ActivityCountDown,omitempty"`
	RewardCountDown    *int64  `protobuf:"varint,13,req,name=RewardCountDown" json:"RewardCountDown,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *NoviceSignInfo) Reset()                    { *m = NoviceSignInfo{} }
func (m *NoviceSignInfo) String() string            { return proto.CompactTextString(m) }
func (*NoviceSignInfo) ProtoMessage()               {}
func (*NoviceSignInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *NoviceSignInfo) GetOrdinaryLose() int64 {
	if m != nil && m.OrdinaryLose != nil {
		return *m.OrdinaryLose
	}
	return 0
}

func (m *NoviceSignInfo) GetSpecialRecharge() int64 {
	if m != nil && m.SpecialRecharge != nil {
		return *m.SpecialRecharge
	}
	return 0
}

func (m *NoviceSignInfo) GetSpecialLose() int64 {
	if m != nil && m.SpecialLose != nil {
		return *m.SpecialLose
	}
	return 0
}

func (m *NoviceSignInfo) GetJumpGame1() int32 {
	if m != nil && m.JumpGame1 != nil {
		return *m.JumpGame1
	}
	return 0
}

func (m *NoviceSignInfo) GetJumpGame2() int32 {
	if m != nil && m.JumpGame2 != nil {
		return *m.JumpGame2
	}
	return 0
}

func (m *NoviceSignInfo) GetOrdinarySignStatus() []int32 {
	if m != nil {
		return m.OrdinarySignStatus
	}
	return nil
}

func (m *NoviceSignInfo) GetSpecialSignStatus() []int32 {
	if m != nil {
		return m.SpecialSignStatus
	}
	return nil
}

func (m *NoviceSignInfo) GetOrdinaryMaxReward() int64 {
	if m != nil && m.OrdinaryMaxReward != nil {
		return *m.OrdinaryMaxReward
	}
	return 0
}

func (m *NoviceSignInfo) GetSpecialMaxReward() int64 {
	if m != nil && m.SpecialMaxReward != nil {
		return *m.SpecialMaxReward
	}
	return 0
}

func (m *NoviceSignInfo) GetOrdinarySignReward() []int64 {
	if m != nil {
		return m.OrdinarySignReward
	}
	return nil
}

func (m *NoviceSignInfo) GetSpecialSignReward() []int64 {
	if m != nil {
		return m.SpecialSignReward
	}
	return nil
}

func (m *NoviceSignInfo) GetActivityCountDown() int64 {
	if m != nil && m.ActivityCountDown != nil {
		return *m.ActivityCountDown
	}
	return 0
}

func (m *NoviceSignInfo) GetRewardCountDown() int64 {
	if m != nil && m.RewardCountDown != nil {
		return *m.RewardCountDown
	}
	return 0
}

// 签到请求
type NoviceSignReq struct {
	SignType         *int32 `protobuf:"varint,1,req,name=SignType" json:"SignType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NoviceSignReq) Reset()                    { *m = NoviceSignReq{} }
func (m *NoviceSignReq) String() string            { return proto.CompactTextString(m) }
func (*NoviceSignReq) ProtoMessage()               {}
func (*NoviceSignReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *NoviceSignReq) GetSignType() int32 {
	if m != nil && m.SignType != nil {
		return *m.SignType
	}
	return 0
}

// 签到响应
type NoviceSignResp struct {
	Reward           *PropExchangeData `protobuf:"bytes,1,req,name=Reward" json:"Reward,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NoviceSignResp) Reset()                    { *m = NoviceSignResp{} }
func (m *NoviceSignResp) String() string            { return proto.CompactTextString(m) }
func (*NoviceSignResp) ProtoMessage()               {}
func (*NoviceSignResp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *NoviceSignResp) GetReward() *PropExchangeData {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 复活
type NoviceReStartInfo struct {
	MaxRandomReward     *int64 `protobuf:"varint,1,req,name=MaxRandomReward" json:"MaxRandomReward,omitempty"`
	ActivityCountDown   *int64 `protobuf:"varint,2,req,name=ActivityCountDown" json:"ActivityCountDown,omitempty"`
	IsCanDrawReward     *bool  `protobuf:"varint,3,req,name=IsCanDrawReward" json:"IsCanDrawReward,omitempty"`
	IsAlreadyDrawReward *bool  `protobuf:"varint,4,req,name=IsAlreadyDrawReward" json:"IsAlreadyDrawReward,omitempty"`
	DrawCountDown       *int64 `protobuf:"varint,5,req,name=DrawCountDown" json:"DrawCountDown,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *NoviceReStartInfo) Reset()                    { *m = NoviceReStartInfo{} }
func (m *NoviceReStartInfo) String() string            { return proto.CompactTextString(m) }
func (*NoviceReStartInfo) ProtoMessage()               {}
func (*NoviceReStartInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *NoviceReStartInfo) GetMaxRandomReward() int64 {
	if m != nil && m.MaxRandomReward != nil {
		return *m.MaxRandomReward
	}
	return 0
}

func (m *NoviceReStartInfo) GetActivityCountDown() int64 {
	if m != nil && m.ActivityCountDown != nil {
		return *m.ActivityCountDown
	}
	return 0
}

func (m *NoviceReStartInfo) GetIsCanDrawReward() bool {
	if m != nil && m.IsCanDrawReward != nil {
		return *m.IsCanDrawReward
	}
	return false
}

func (m *NoviceReStartInfo) GetIsAlreadyDrawReward() bool {
	if m != nil && m.IsAlreadyDrawReward != nil {
		return *m.IsAlreadyDrawReward
	}
	return false
}

func (m *NoviceReStartInfo) GetDrawCountDown() int64 {
	if m != nil && m.DrawCountDown != nil {
		return *m.DrawCountDown
	}
	return 0
}

// 复活奖励领取回复
type NoviceReStartDrawResp struct {
	Reward           *PropExchangeData `protobuf:"bytes,1,req,name=Reward" json:"Reward,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NoviceReStartDrawResp) Reset()                    { *m = NoviceReStartDrawResp{} }
func (m *NoviceReStartDrawResp) String() string            { return proto.CompactTextString(m) }
func (*NoviceReStartDrawResp) ProtoMessage()               {}
func (*NoviceReStartDrawResp) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *NoviceReStartDrawResp) GetReward() *PropExchangeData {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 新手活动
type NoviceActivityInfo struct {
	ReStartInfo       *NoviceReStartInfo     `protobuf:"bytes,1,req,name=ReStartInfo" json:"ReStartInfo,omitempty"`
	SignInfo          *NoviceSignInfo        `protobuf:"bytes,2,req,name=SignInfo" json:"SignInfo,omitempty"`
	FirstTaskInfo     *NoviceFirstTaskInfo   `protobuf:"bytes,3,req,name=FirstTaskInfo" json:"FirstTaskInfo,omitempty"`
	ScratchCardInfo   *NoviceScratchCardInfo `protobuf:"bytes,4,req,name=ScratchCardInfo" json:"ScratchCardInfo,omitempty"`
	IsOpen            *bool                  `protobuf:"varint,5,req,name=IsOpen" json:"IsOpen,omitempty"`
	ActivityCountDown *int64                 `protobuf:"varint,6,req,name=ActivityCountDown" json:"ActivityCountDown,omitempty"`
	RewardCountDown   *int64                 `protobuf:"varint,7,req,name=RewardCountDown" json:"RewardCountDown,omitempty"`
	XXX_unrecognized  []byte                 `json:"-"`
}

func (m *NoviceActivityInfo) Reset()                    { *m = NoviceActivityInfo{} }
func (m *NoviceActivityInfo) String() string            { return proto.CompactTextString(m) }
func (*NoviceActivityInfo) ProtoMessage()               {}
func (*NoviceActivityInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *NoviceActivityInfo) GetReStartInfo() *NoviceReStartInfo {
	if m != nil {
		return m.ReStartInfo
	}
	return nil
}

func (m *NoviceActivityInfo) GetSignInfo() *NoviceSignInfo {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

func (m *NoviceActivityInfo) GetFirstTaskInfo() *NoviceFirstTaskInfo {
	if m != nil {
		return m.FirstTaskInfo
	}
	return nil
}

func (m *NoviceActivityInfo) GetScratchCardInfo() *NoviceScratchCardInfo {
	if m != nil {
		return m.ScratchCardInfo
	}
	return nil
}

func (m *NoviceActivityInfo) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *NoviceActivityInfo) GetActivityCountDown() int64 {
	if m != nil && m.ActivityCountDown != nil {
		return *m.ActivityCountDown
	}
	return 0
}

func (m *NoviceActivityInfo) GetRewardCountDown() int64 {
	if m != nil && m.RewardCountDown != nil {
		return *m.RewardCountDown
	}
	return 0
}

// 领取初体验req
type NoviceFirstTaskReq struct {
	MType            *FirstTaskType `protobuf:"varint,1,req,name=MType,enum=VK.Proto.FirstTaskType" json:"MType,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *NoviceFirstTaskReq) Reset()                    { *m = NoviceFirstTaskReq{} }
func (m *NoviceFirstTaskReq) String() string            { return proto.CompactTextString(m) }
func (*NoviceFirstTaskReq) ProtoMessage()               {}
func (*NoviceFirstTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *NoviceFirstTaskReq) GetMType() FirstTaskType {
	if m != nil && m.MType != nil {
		return *m.MType
	}
	return FirstTaskType_FirstTaskTypeInvalid
}

func init() {
	proto.RegisterType((*NoviceScratchCardInfo)(nil), "VK.Proto.NoviceScratchCardInfo")
	proto.RegisterType((*NoviceFirstTaskItem)(nil), "VK.Proto.NoviceFirstTaskItem")
	proto.RegisterType((*NoviceFirstTaskInfo)(nil), "VK.Proto.NoviceFirstTaskInfo")
	proto.RegisterType((*NoviceSignInfo)(nil), "VK.Proto.NoviceSignInfo")
	proto.RegisterType((*NoviceSignReq)(nil), "VK.Proto.NoviceSignReq")
	proto.RegisterType((*NoviceSignResp)(nil), "VK.Proto.NoviceSignResp")
	proto.RegisterType((*NoviceReStartInfo)(nil), "VK.Proto.NoviceReStartInfo")
	proto.RegisterType((*NoviceReStartDrawResp)(nil), "VK.Proto.NoviceReStartDrawResp")
	proto.RegisterType((*NoviceActivityInfo)(nil), "VK.Proto.NoviceActivityInfo")
	proto.RegisterType((*NoviceFirstTaskReq)(nil), "VK.Proto.NoviceFirstTaskReq")
	proto.RegisterEnum("VK.Proto.FirstTaskType", FirstTaskType_name, FirstTaskType_value)
}

func init() { proto.RegisterFile("client_noviceactivity.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 808 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x9e, 0x25, 0xdb, 0x71, 0x8e, 0x63, 0xc7, 0x61, 0x92, 0xc5, 0x49, 0x96, 0xcd, 0x30, 0x86,
	0xc1, 0xc8, 0x36, 0x63, 0x33, 0x76, 0xbb, 0x0b, 0x4f, 0xce, 0x06, 0x2d, 0xcd, 0x0f, 0xe8, 0xa0,
	0xbd, 0x0c, 0x08, 0x89, 0x8d, 0x85, 0x5a, 0x94, 0x2a, 0x31, 0x71, 0x7c, 0xd7, 0xdb, 0xa0, 0x6f,
	0xd2, 0xc7, 0xe8, 0xfb, 0xf4, 0x1d, 0x0a, 0x52, 0x94, 0xf5, 0x8b, 0x34, 0x29, 0xd0, 0x3b, 0xf1,
	0xfb, 0xbe, 0x73, 0x74, 0xce, 0xc7, 0x43, 0x12, 0x0e, 0xad, 0xb9, 0x43, 0x19, 0xbf, 0x66, 0xde,
	0x9d, 0x63, 0x51, 0x62, 0x71, 0xe7, 0xce, 0xe1, 0xcb, 0xa1, 0x1f, 0x78, 0xdc, 0x43, 0x8d, 0x97,
	0xa7, 0xc3, 0x4b, 0xf1, 0x75, 0xb0, 0x1d, 0xce, 0x48, 0x40, 0xed, 0x6b, 0xcb, 0x73, 0x5d, 0x8f,
	0x45, 0x74, 0xff, 0x41, 0x83, 0xdd, 0x73, 0x19, 0x37, 0xb5, 0x02, 0xc2, 0xad, 0x99, 0x41, 0x02,
	0xdb, 0x64, 0xaf, 0x3d, 0xf4, 0x23, 0x80, 0x19, 0xfe, 0xe3, 0x30, 0x5b, 0x20, 0xdd, 0x4a, 0x4f,
	0x1b, 0x34, 0x70, 0x0a, 0x41, 0xbf, 0x40, 0xdb, 0x0c, 0x0d, 0xcf, 0xf5, 0xe7, 0x94, 0x53, 0x11,
	0xd1, 0xd5, 0xa4, 0x26, 0x87, 0xa2, 0xef, 0xa1, 0x3e, 0x76, 0xbd, 0x5b, 0xc6, 0xbb, 0x7a, 0x4f,
	0x1b, 0xe8, 0x58, 0xad, 0xd0, 0x0f, 0xb0, 0x7e, 0x46, 0xee, 0x15, 0x55, 0x95, 0x54, 0x02, 0xa0,
	0x03, 0x68, 0x98, 0x21, 0xa6, 0x0b, 0xf1, 0xef, 0x9a, 0xcc, 0xbb, 0x5a, 0xa3, 0xdf, 0x60, 0x6b,
	0xac, 0x9a, 0x34, 0x84, 0x78, 0xe2, 0x2d, 0x58, 0xb7, 0x2e, 0x33, 0x14, 0x09, 0x34, 0x80, 0xcd,
	0x28, 0x2e, 0xd1, 0xae, 0x49, 0x6d, 0x1e, 0xee, 0xbf, 0xaf, 0xc0, 0x76, 0xe4, 0xc5, 0xbf, 0x4e,
	0x10, 0xf2, 0x2b, 0x12, 0xbe, 0x31, 0x39, 0x75, 0xd1, 0xcf, 0xd0, 0x3a, 0xa7, 0xd4, 0x36, 0x3c,
	0x66, 0x3b, 0xdc, 0xf1, 0x98, 0x34, 0x43, 0xc7, 0x59, 0x30, 0xdb, 0x8f, 0xf6, 0x58, 0x3f, 0x7a,
	0xae, 0x9f, 0x1d, 0xa8, 0x19, 0x29, 0x17, 0xa2, 0x45, 0xff, 0xa3, 0x56, 0xac, 0x46, 0xf8, 0x39,
	0x86, 0x0d, 0x4c, 0xad, 0x19, 0x09, 0x6e, 0xa8, 0xa8, 0x4e, 0x16, 0xd3, 0x1c, 0x1d, 0x0d, 0xe3,
	0x7d, 0x1e, 0x96, 0xb4, 0x80, 0x33, 0x21, 0xe8, 0x04, 0xda, 0xaf, 0x1c, 0x3e, 0xb3, 0x03, 0xb2,
	0x20, 0x73, 0x99, 0x44, 0x7b, 0x4a, 0x92, 0x5c, 0x10, 0x32, 0xa1, 0x23, 0x26, 0xe1, 0xe4, 0xde,
	0x9a, 0x11, 0xa6, 0xaa, 0xd1, 0x9f, 0x92, 0xa8, 0x10, 0x56, 0xbe, 0xa5, 0xd5, 0x67, 0x6c, 0x69,
	0xad, 0x7c, 0x4b, 0x3f, 0x54, 0xa1, 0xad, 0xc6, 0xdb, 0xb9, 0x61, 0xd2, 0xbf, 0x3e, 0x6c, 0x5c,
	0x04, 0xb6, 0xc3, 0x48, 0xb0, 0x7c, 0xe1, 0x85, 0x54, 0x6d, 0x66, 0x06, 0x13, 0x3f, 0x98, 0xfa,
	0xd4, 0x72, 0xc8, 0x3c, 0xf6, 0x4d, 0xed, 0x68, 0x1e, 0x46, 0x3d, 0x68, 0x2a, 0x48, 0x26, 0x8b,
	0x46, 0x3c, 0x0d, 0x89, 0xb9, 0xf8, 0xff, 0xd6, 0xf5, 0xff, 0x23, 0x2e, 0xfd, 0x53, 0xb6, 0x54,
	0xc3, 0x09, 0x90, 0x66, 0x47, 0xb2, 0x89, 0x14, 0x3b, 0x42, 0x43, 0x40, 0x71, 0x5d, 0xa2, 0xfe,
	0x29, 0x27, 0xfc, 0x36, 0xec, 0xd6, 0x7b, 0xfa, 0xa0, 0x86, 0x4b, 0x18, 0x61, 0xa3, 0xfa, 0x75,
	0x4a, 0xbe, 0x26, 0xe5, 0x45, 0x42, 0xa8, 0xe3, 0x1c, 0x67, 0xe4, 0x5e, 0x0d, 0x67, 0x23, 0x32,
	0xbd, 0x40, 0xa0, 0x63, 0xe8, 0xa8, 0x14, 0x89, 0x78, 0x5d, 0x8a, 0x0b, 0x78, 0xbe, 0x6e, 0xa5,
	0x86, 0x9e, 0x3e, 0xd0, 0x71, 0x09, 0x93, 0xab, 0x5b, 0xc9, 0x9b, 0x52, 0x5e, 0x24, 0xca, 0x87,
	0x65, 0xe3, 0x19, 0xc3, 0xd2, 0x2a, 0x1f, 0x96, 0x5f, 0xa1, 0x95, 0xcc, 0x0a, 0xa6, 0x6f, 0xc5,
	0xa1, 0x15, 0x9f, 0x57, 0x4b, 0x3f, 0x1a, 0x93, 0x1a, 0x5e, 0xad, 0xfb, 0x93, 0xf4, 0x60, 0x61,
	0x1a, 0xfa, 0x68, 0x04, 0x75, 0x55, 0x79, 0x74, 0x24, 0x0f, 0x92, 0x43, 0x70, 0x19, 0x78, 0x7e,
	0x3c, 0xef, 0x13, 0xc2, 0x09, 0x56, 0xca, 0xfe, 0xa7, 0x0a, 0x6c, 0x45, 0x69, 0x30, 0x9d, 0x72,
	0x12, 0x70, 0x39, 0xa2, 0x03, 0xd8, 0x14, 0x5e, 0x12, 0x66, 0x7b, 0x6e, 0x2a, 0xa5, 0x8e, 0xf3,
	0x70, 0xb9, 0x15, 0xda, 0x23, 0x56, 0x98, 0xa1, 0x41, 0xd8, 0x24, 0x20, 0x8b, 0xcc, 0x5d, 0x94,
	0x87, 0xd1, 0x1f, 0xb0, 0x6d, 0x86, 0xe3, 0x79, 0x40, 0x89, 0xbd, 0x4c, 0xa9, 0xab, 0x52, 0x5d,
	0x46, 0x89, 0x4b, 0x52, 0xac, 0xf2, 0x27, 0x32, 0x0b, 0xf6, 0x4f, 0xe3, 0xd7, 0x46, 0xb5, 0x1b,
	0x25, 0xf8, 0x4a, 0xf3, 0x1e, 0x74, 0x40, 0x51, 0xb6, 0xb8, 0x55, 0xe9, 0xde, 0xdf, 0xd0, 0x4c,
	0x99, 0xa9, 0xf2, 0x1d, 0xe6, 0x6f, 0xa4, 0x94, 0x04, 0xa7, 0xf5, 0xe8, 0xaf, 0x68, 0xd3, 0x57,
	0x2f, 0x5a, 0x73, 0xd4, 0xcd, 0xc7, 0xc6, 0x3c, 0x5e, 0x29, 0x91, 0x01, 0xad, 0xcc, 0x35, 0xfd,
	0xe5, 0x8b, 0x50, 0xc4, 0x67, 0x63, 0x90, 0x09, 0x9b, 0xb9, 0x57, 0x58, 0x3a, 0xde, 0x1c, 0xfd,
	0x54, 0xa8, 0x20, 0x2b, 0xc3, 0xf9, 0x38, 0xf1, 0xea, 0x9a, 0xe1, 0x85, 0x4f, 0x99, 0x7a, 0x3d,
	0xd5, 0xea, 0x9b, 0xbd, 0x9d, 0x46, 0xbc, 0x15, 0xab, 0x8e, 0xc4, 0x01, 0xfa, 0x1d, 0x6a, 0x67,
	0xab, 0xd3, 0xd3, 0x1e, 0xed, 0x25, 0x6d, 0xac, 0x64, 0x82, 0xc6, 0x91, 0xea, 0xf8, 0x5d, 0x25,
	0xe5, 0xa2, 0x40, 0x50, 0x17, 0x76, 0x32, 0x80, 0xc9, 0xee, 0xc8, 0xdc, 0xb1, 0x3b, 0xdf, 0xa1,
	0x7d, 0xd8, 0xcd, 0xe6, 0x50, 0x37, 0x72, 0xa7, 0x82, 0x0e, 0x61, 0x2f, 0x43, 0x25, 0xcf, 0x56,
	0x47, 0x43, 0x47, 0xb0, 0x9f, 0x21, 0xd3, 0x4f, 0x51, 0x47, 0xff, 0x1c, 0x00, 0x00, 0xff, 0xff,
	0x0d, 0x71, 0x6a, 0xa1, 0x4c, 0x09, 0x00, 0x00,
}
